<chapter id="fscreate-96442"><title>Creating UFS, TMPFS, and LOFS
File Systems (Tasks)</title><highlights><para>This chapter describes how to create UFS, temporary (TMPFS), and loopback
(LOFS) file systems. For UFS file systems, this chapter shows you how to create
a file system by using the <command>newfs</command> command. Because TMPFS
and LOFS are virtual file systems, you actually &ldquo;access&rdquo; them
by mounting them.</para><para>This is a list of the step-by-step instructions in this chapter. </para><itemizedlist><listitem><para><olink targetptr="fscreate-22821" remap="internal">How to Create a UFS File
System</olink></para>
</listitem><listitem><para><olink targetptr="fsoverview-14" remap="internal">How to Create a Multiterabyte
UFS File System</olink></para>
</listitem><listitem><para><olink targetptr="fsoverview-17" remap="internal">How to Expand a Multiterabyte
UFS File System</olink></para>
</listitem><listitem><para><olink targetptr="fsoverview-13" remap="internal">How to Expand a UFS File
System to a Multiterabyte UFS File System</olink></para>
</listitem><listitem><para><olink targetptr="fscreate-34114" remap="internal">How to Create and Mount
a TMPFS File System</olink></para>
</listitem><listitem><para><olink targetptr="fscreate-25028" remap="internal">How to Create and Mount
an LOFS File System</olink></para>
</listitem>
</itemizedlist><note><para>For instructions on how to create UFS and DOS file systems on
removable media, see <olink targetptr="medintro-55492" remap="internal">Chapter&nbsp;1, Managing
Removable Media (Overview)</olink>.</para>
</note>
</highlights><sect1 id="fscreate-1"><title>Creating a UFS File System</title><para>Before you can create a UFS file system on a disk, the disk must be
formatted and divided into slices. A <emphasis>disk slice</emphasis> is a
physical subset of a disk that is composed of a single range of contiguous
blocks. A slice can be used either as a raw device that provides, for example,
swap space, or to hold a disk-based file system. See <olink targetptr="disksconcepts-29477" remap="internal">Chapter&nbsp;10, Managing Disks (Overview)</olink> for
complete information on formatting disks and dividing disks into slices.</para><para>Disk and storage management products, such as <trademark>Solaris</trademark> Volume
Manager, create more sophisticated <emphasis>volumes</emphasis>. Volumes expand
beyond single-slice or single-disk boundaries. For more information about
using volumes, see <olink targetdoc="logvolmgradmin" remap="external"><citetitle remap="book">Solaris Volume Manager Administration Guide</citetitle></olink>.</para><note><para>Solaris device names use the term slice (and the letter <literal>s</literal> in
the device name) to refer to the slice number. Slices are also called <emphasis>partitions</emphasis>.</para>
</note><para>You need to create UFS file systems only occasionally, because the Solaris OS automatically
creates them as part of the installation process. You need to create (or re-create)
a UFS file system when you want to do the following: </para><itemizedlist><listitem><para>Add or replace disks</para>
</listitem><listitem><para>Change the existing partitioning structure of a disk</para>
</listitem><listitem><para>Fully restore of a file system</para>
</listitem>
</itemizedlist><para>The <command>newfs</command> command is the standard way to create
UFS file systems. The <command>newfs</command> command is a convenient front
end to the <command>mkfs</command> command, which actually creates the new
file system. The <command>newfs</command> command reads parameter defaults,
such as tracks per cylinder and sectors per track, from the label for the
disk that will contain the new file system. The options you choose are passed
to the <command>mkfs</command> command to build the file system.</para><para>For information about the default parameters that are used by the <command>newfs</command> command, see <olink targetdoc="refman1m" targetptr="newfs-1m" remap="external"><citerefentry><refentrytitle>newfs</refentrytitle><manvolnum>1M</manvolnum></citerefentry></olink>.</para><task id="fscreate-22821"><title>How to Create a UFS File System</title><taskprerequisites><para>Ensure that you have met the following prerequisites:</para><itemizedlist><listitem><para>The disk must be formatted and divided into slices.</para>
</listitem><listitem><para>If you are re-creating an existing UFS file system, unmount
it.</para>
</listitem><listitem><para>You need to know the device name of the slice that will contain
the file system.</para>
</listitem>
</itemizedlist><para>For information on finding disks and disk slice numbers, see <olink targetptr="disksprep-31030" remap="internal">Chapter&nbsp;11, Administering Disks (Tasks)</olink>.</para><para>For information on formatting disks and dividing disks into slices,
see <olink targetptr="disksconcepts-29477" remap="internal">Chapter&nbsp;10, Managing Disks
(Overview)</olink>.</para>
</taskprerequisites><procedure><step id="fscreate-step-4"><para>You must be superuser or assume an equivalent
role.</para>
</step><step id="fscreate-step-5"><para>Create the UFS file system.</para><screen># <userinput>newfs</userinput> [<userinput>-N</userinput>] [<userinput>-b</userinput> <replaceable>size</replaceable>] [<userinput>-i</userinput> <replaceable>bytes</replaceable>] <userinput>/dev/rdsk/</userinput><replaceable>device-name</replaceable></screen><variablelist><varlistentry><term><option>N</option></term><listitem><para>Displays what parameters the <command>newfs</command> command
would pass to the <command>mkfs</command> command without actually creating
the file system. This option is a good way to test the <command>newfs</command> command.</para>
</listitem>
</varlistentry><varlistentry><term><option>b</option> <replaceable>size</replaceable></term><listitem><para>Specifies the block size for the file system, either 4096
or 8192 bytes per block. The default is 8192.</para>
</listitem>
</varlistentry><varlistentry><term><option>i</option> <replaceable>bytes</replaceable></term><listitem><para>Specifies the number of bytes per inode. The default varies
depending on the disk size. For more information, see <olink targetdoc="refman1m" targetptr="newfs-1m" remap="external"><citerefentry><refentrytitle>newfs</refentrytitle><manvolnum>1M</manvolnum></citerefentry></olink>.</para>
</listitem>
</varlistentry><varlistentry><term><replaceable>device-name</replaceable></term><listitem><para>Specifies the disk device name on which to create the new
file system.</para>
</listitem>
</varlistentry>
</variablelist><para>The system asks for confirmation.</para><caution><para>Be sure you have specified the correct device name for the
slice before performing this step. If you specify the wrong slice, you will
erase its contents when the new file system is created. This error might cause
the system to panic.</para>
</caution>
</step><step id="fscreate-step-20"><para>To verify the creation of the UFS file system,
check the new file system. </para><screen># <userinput>fsck /dev/rdsk/</userinput><replaceable>device-name</replaceable></screen><para>where <replaceable>device-name</replaceable> argument specifies the
name of the disk device that contains the new file system.</para><para>The <command>fsck</command> command checks the consistency of the new file system, reports
any problems, and prompts you before it repairs the problems. For more information
on the <command>fsck</command> command, see <olink targetptr="fstroublefsck-61446" remap="internal">Chapter&nbsp;21, Checking UFS File System
Consistency (Tasks)</olink> or <olink targetdoc="refman1m" targetptr="fsck-1m" remap="external"><citerefentry><refentrytitle>fsck</refentrytitle><manvolnum>1M</manvolnum></citerefentry></olink>.</para>
</step>
</procedure><example id="fncqs"><title>Creating a UFS File System</title><para>The following example shows how to create a UFS file system on <filename>/dev/rdsk/c0t1d0s7</filename>.</para><screen width="100"># <userinput>newfs /dev/rdsk/c0t1d0s7</userinput>
/dev/rdsk/c0t1d0s7:  725760 sectors in 720 cylinders of 14 tracks, 72 sectors
        354.4MB in 45 cyl groups (16 c/g, 7.88MB/g, 3776 i/g)
super-block backups (for fsck -F ufs -o b=#) at:
 32, 16240, 32448, 48656, 64864, 81072, 97280, 113488, 129696, 145904, 162112,
 178320, 194528, 210736, 226944, 243152, 258080, 274288, 290496, 306704,
 322912, 339120, 355328, 371536, 387744, 403952, 420160, 436368, 452576,
 468784, 484992, 501200, 516128, 532336, 548544, 564752, 580960, 597168,
 613376, 629584, 645792, 662000, 678208, 694416, 710624,
 <userinput>fsck /dev/rdsk/c0t1d0s7</userinput>
#</screen>
</example><taskrelated-custom><title>After You Create a UFS File System ...</title><para>To mount the UFS file system and make it available, go to <olink targetptr="fsmount-42780" remap="internal">Chapter&nbsp;18, Mounting and Unmounting File Systems
(Tasks)</olink>.</para>
</taskrelated-custom>
</task><task id="fsoverview-14"><title>How to Create a Multiterabyte UFS File System</title><tasksummary><para>Support for a multiterabyte UFS file system assumes the availability
of multiterabyte LUNs, provided as Solaris Volume Manager or VxVM volumes,
or as physical disks greater than 1 terabyte.</para><para>Before you can create a multiterabyte UFS file system, verify that you
have done either of the following:</para><itemizedlist><listitem><para>Created a multiterabyte disk partition by using the <command>format</command> utility or the Solaris installation utilities</para>
</listitem><listitem><para>Set up a multiterabyte volume with Solaris Volume Manager</para>
</listitem>
</itemizedlist><para>For more information about multiterabyte UFS file systems, see <olink targetptr="fsoverview-18" remap="internal">Support of Multiterabyte UFS File Systems</olink>.</para>
</tasksummary><procedure><step><para>Become superuser.</para>
</step><step id="fsoverview-step-19"><para>Create a multiterabyte UFS file system
on a logical volume.</para><para>For example, this command creates a UFS file
system for a 1.8 terabyte volume:</para><screen># <userinput>newfs /dev/md/rdsk/d99</userinput>
newfs: construct a new file system /dev/md/rdsk/d99: (y/n)? <userinput>y</userinput>
/dev/md/rdsk/d99:    3859402752 sectors in 628158 cylinders of 48 tracks, 
128 sectors
        1884474.0MB in 4393 cyl groups (143 c/g, 429.00MB/g, 448 i/g)
super-block backups (for fsck -F ufs -o b=#) at:
32, 878752, 1757472, 2636192, 3514912, 4393632, 5272352, 6151072, 702...
Initializing cylinder groups:
........................................................................
super-block backups for last 10 cylinder groups at:
 3850872736, 3851751456, 3852630176, 3853508896, 3854387616, 3855266336,
 3856145056, 3857023776, 3857902496, 3858781216,
# </screen>
</step><step id="fsoverview-step-17"><para>Verify the integrity of the newly created
file system.</para><para>For example:</para><screen># <userinput>fsck /dev/md/rdsk/d99</userinput>
** /dev/md/rdsk/d99
** Last Mounted on 
** Phase 1 - Check Blocks and Sizes
** Phase 2 - Check Pathnames
** Phase 3 - Check Connectivity
** Phase 4 - Check Reference Counts
** Phase 5 - Check Cyl groups
2 files, 2 used, 241173122 free (0 frags, 241173122 blocks, 0.0% 
fragmentation)
# </screen>
</step><step id="fsoverview-step-18"><para>Mount and verify the newly created file
system.</para><para>For example:</para><screen># <userinput>mount /dev/md/dsk/d99 /bigdir</userinput>
# <userinput>df -h /bigdir</userinput>
Filesystem             size   used  avail capacity  Mounted on
/dev/md/dsk/d99        1.8T    64M   1.8T     1%    /bigdir</screen>
</step>
</procedure>
</task><task id="fsoverview-17"><title>How to Expand a Multiterabyte UFS
File System</title><tasksummary><para>After a multiterabyte UFS file system is created, you can use the <command>growfs</command> command to expand the file system. For example, using the
file system that was created for the volume in the preceding procedure, you
can add another disk to this volume. Then, expand the file system.</para>
</tasksummary><procedure><step id="fsoverview-step-64"><para>Become superuser.</para>
</step><step><para>Add another disk to the volume.</para><para>For example:</para><screen># <userinput>metattach d99 c4t5d0s4</userinput>
d99: component is attached
# <userinput>metastat</userinput>
d99: Concat/Stripe
    Size: 5145882624 blocks (2.4 TB)
    Stripe 0:
        Device     Start Block  Dbase   Reloc
        c0t1d0s4      36864     Yes     Yes
    Stripe 1:
        Device     Start Block  Dbase   Reloc
        c3t7d0s4          0     No      Yes
    Stripe 2:
        Device     Start Block  Dbase   Reloc
        c1t1d0s4          0     No      Yes
    Stripe 3:
        Device     Start Block  Dbase   Reloc
        c4t5d0s4          0     No      Yes</screen>
</step><step id="fsoverview-step-21"><para>Expand the file system.</para><para>For
example:</para><screen># <userinput>growfs -v /dev/md/rdsk/d99</userinput>
/usr/lib/fs/ufs/mkfs -G /dev/md/rdsk/d99 5145882624
/dev/md/rdsk/d99:    5145882624 sectors in 837546 cylinders of 48 tracks, 
128 sectors
        2512638.0MB in 5857 cyl groups (143 c/g, 429.00MB/g, 448 i/g)
super-block backups (for fsck -F ufs -o b=#) at:
 32, 878752, 1757472, 2636192, 3514912, 4393632, 5272352, 6151072, 702...
Initializing cylinder groups:
.........................................................................
super-block backups for last 10 cylinder groups at:
 5137130400, 5138009120, 5138887840, 5139766560, 5140645280, 5141524000,
 5142402720, 5143281440, 5144160160, 5145038880,
# </screen>
</step><step id="fsoverview-step-24"><para>Mount and verify the expanded file system.</para><para>For example:</para><screen># <userinput>mount /dev/md/dsk/d99 /bigdir</userinput>
# <userinput>df -h /bigdir</userinput> 
Filesystem             size   used  avail capacity  Mounted on 
/dev/md/dsk/d99        2.4T    64M   2.4T     1%    /bigdir</screen>
</step>
</procedure>
</task><task id="fsoverview-13"><title>How to Expand a UFS File System
to a Multiterabyte UFS File System</title><tasksummary><para>Use the following procedure to expand a UFS file system to greater than
1 terabyte in size. This procedure assumes that the <command>newfs</command> <option>T</option> option was used initially to create the UFS file system.</para>
</tasksummary><procedure><step><para>Become superuser.</para>
</step><step id="fsoverview-step-25"><para>Identify the size of the current disk
or volume.</para><para>For example, the following volume is 800 gigabytes:</para><screen># <userinput>metastat d98</userinput>
d98: Concat/Stripe
    Size: 1677754368 blocks (800 GB)
    Stripe 0:
        Device     Start Block  Dbase   Reloc
        c0t1d0s4          0     No      Yes
    Stripe 1:
        Device     Start Block  Dbase   Reloc
        c3t7d0s4          0     No      Yes</screen>
</step><step id="fsoverview-step-26"><para>Increase the volume to greater than 1
terabyte.</para><para>For example:</para><screen># <userinput>metattach d98 c1t1d0s4</userinput>
d98: component is attached
# <userinput>metastat d98</userinput>
d98: Concat/Stripe
    Size: 2516631552 blocks (1.2 TB)
    Stripe 0:
        Device     Start Block  Dbase   Reloc
        c0t1d0s4          0     No      Yes
    Stripe 1:
        Device     Start Block  Dbase   Reloc
        c3t7d0s4          0     No      Yes
    Stripe 2:
        Device     Start Block  Dbase   Reloc
        c1t1d0s4          0     No      Yes</screen>
</step><step id="fsoverview-step-23"><para>Expand the UFS file system for the disk
or volume to greater than 1 terabyte.</para><para>For example:</para><screen><userinput>growfs -v /dev/md/rdsk/d98</userinput>
/usr/lib/fs/ufs/mkfs -G /dev/md/rdsk/d98 2516631552
/dev/md/rdsk/d98:    2516631552 sectors in 68268 cylinders of 144 tracks, 
256 sectors
        1228824.0MB in 2731 cyl groups (25 c/g, 450.00MB/g, 448 i/g)
super-block backups (for fsck -F ufs -o b=#) at:
 32, 921888, 1843744, 2765600, 3687456, 4609312, 5531168, 6453024, 737...
 8296736,
Initializing cylinder groups:
......................................................
super-block backups for last 10 cylinder groups at:
 2507714848, 2508636704, 2509558560, 2510480416, 2511402272, 2512324128,
 2513245984, 2514167840, 2515089696, 2516011552,</screen>
</step><step><para>Mount and verify the expanded file system.</para><para>For example:</para><screen># <userinput>mount /dev/md/dsk/d98 /datadir</userinput>
# <userinput>df -h /datadir</userinput> 
Filesystem             size   used  avail capacity  Mounted on 
/dev/md/dsk/d98        1.2T    64M   1.2T     1%    /datadir</screen>
</step>
</procedure>
</task><sect2 id="fsoverview-15"><title>Troubleshooting Multiterabyte UFS File System
Problems</title><para>Use the following error messages and solutions to troubleshoot problems
with multiterabyte UFS file systems.</para><variablelist termlength="wholeline"><varlistentry><term>Error Message (similar to the following):</term><listitem><screen>mount: /dev/rdsk/c0t0d0s0 is not this fstype.</screen>
</listitem>
</varlistentry><varlistentry><term>Cause</term><listitem><para>You attempted to mount a UFS file system that is greater than
1 terabyte on a system running a Solaris release prior to the  release.</para>
</listitem>
</varlistentry><varlistentry><term>Solution</term><listitem><para>Mount a UFS file system that is greater than 1 terabyte on
a system running the   or later release.</para>
</listitem>
</varlistentry><varlistentry><term>Error Message</term><listitem><screen>"File system was not set up with the multi-terabyte format."  "Its size 
cannot be increased to a terabyte or more."</screen>
</listitem>
</varlistentry><varlistentry><term>Cause</term><listitem><para>You attempted to expand a file system that was not created
by using the <command>newfs</command> <option>T</option> command.</para>
</listitem>
</varlistentry><varlistentry><term>Solution</term><listitem><orderedlist><listitem><para>Back up the data for the file system that you want to expand
to greater than 1 terabyte.</para>
</listitem><listitem><para>Re-create the file system by using the <command>newfs</command> command
to create a multiterabyte file system.</para>
</listitem><listitem><para>Restore the backup data into the newly created file system.</para>
</listitem>
</orderedlist>
</listitem>
</varlistentry>
</variablelist>
</sect2>
</sect1><sect1 id="fscreate-99040"><title>Creating a Temporary File System (TMPFS)</title><para>A <emphasis>temporary file system</emphasis> (<emphasis>TMPFS</emphasis>)
uses local memory for file system reads and writes, which is typically much
faster than reads and writes in a UFS file system. TMPFS file systems can
improve system performance by saving the cost of reading and writing temporary
files to a local disk or across the network. Files in TMPFS file systems do
not survive across reboots or unmounts.</para><para>If you create multiple TMPFS file systems, be aware that they all use
the same system resources. Files created under one TMPFS file system use up
space available for any other TMPFS file system, unless you limit TMPFS sizes
by using the <option>o size</option> option of the <command>mount</command> command.</para><para>For more information, see the <olink targetdoc="refman7" targetptr="tmpfs-7fs" remap="external"><citerefentry><refentrytitle>tmpfs</refentrytitle><manvolnum>7FS</manvolnum></citerefentry></olink>.</para><task id="fscreate-34114"><title>How to Create and Mount a TMPFS File System</title><procedure><step id="fscreate-step-10"><para>Become superuser or assume an equivalent
role.</para>
</step><step id="fscreate-step-34"><para>Create the directory that you want to mount
as the TMPFS file system, if necessary.</para><screen># <userinput>mkdir</userinput> <replaceable>/mount-point</replaceable></screen><para>where <replaceable>mount-point</replaceable> is the directory on which
the TMPFS file system is mounted.</para>
</step><step id="fscreate-step-12"><para>Mount the TMPFS file system. </para><screen># <userinput>mount -F tmpfs</userinput> [<userinput>-o size=</userinput><replaceable>number</replaceable>]  <userinput>swap</userinput> <replaceable>mount-point</replaceable></screen><variablelist><varlistentry><term><option>o size=</option><replaceable>number</replaceable></term><listitem><para>Specifies the size limit of the TMPFS file system in Mbytes. </para>
</listitem>
</varlistentry><varlistentry><term><replaceable>mount-point</replaceable></term><listitem><para>Specifies the directory on which the TMPFS file system is
mounted.</para>
</listitem>
</varlistentry>
</variablelist><para>To set up the system to automatically mount a TMPFS file system at boot
time, see <olink targetptr="fscreate-27" remap="internal">Example&nbsp;17&ndash;3</olink>.</para>
</step><step id="fscreate-step-21"><para>Verify that the TMPFS file system has been
created.</para><screen># <userinput>mount -v</userinput></screen>
</step>
</procedure><example id="fncqx"><title>Creating and Mounting a TMPFS File System</title><para>The following example shows how to create, mount, and limit the size
of the TMPFS file system, <filename>/export/reports</filename>, to 50 Mbytes.</para><screen># <userinput>mkdir /export/reports</userinput>
# <userinput>chmod 777 /export/reports</userinput>
# <userinput>mount -F tmpfs -o size=50m swap /export/reports</userinput>
# <userinput>mount -v</userinput></screen>
</example><example id="fscreate-27"><title>Mounting a TMPFS File System at Boot Time</title><para>You can set up the system to automatically mount a TMPFS file system
at boot time by adding an <filename>/etc/vfstab</filename> entry. The following
example shows an entry in the <filename>/etc/vfstab</filename> file that mounts <filename>/export/test</filename> as a TMPFS file system at boot time. Because the <literal>size=</literal><replaceable>number</replaceable> option is not specified,
the size of the TMPFS file system on <filename>/export/test</filename> is
limited only by the available system resources.</para><screen>swap - /export/test  tmpfs   -  yes  -</screen><para>For more information on the <filename>/etc/vfstab</filename> file, see <olink targetptr="fsmount-81772" remap="internal">Field Descriptions for the /etc/vfstab File</olink>.</para>
</example>
</task>
</sect1><sect1 id="fscreate-86793"><title>Creating and Mounting a Loopback File System
(LOFS)</title><para>An <emphasis>LOFS file system</emphasis> is a
virtual file system that provides an alternate path to an existing file system.
When other file systems are mounted onto an LOFS file system, the original
file system does not change.</para><para>For more information, see the <olink targetdoc="refman7" targetptr="lofs-7fs" remap="external"><citerefentry><refentrytitle>lofs</refentrytitle><manvolnum>7FS</manvolnum></citerefentry></olink>.</para><note><para>Be careful when creating LOFS file systems. Because LOFS file
systems are virtual file systems, the potential for confusing both users and
applications is enormous.</para>
</note><task id="fscreate-25028"><title>How to Create and Mount an LOFS File System</title><procedure><step id="fscreate-step-16"><para>Become superuser or assume an equivalent
role.</para>
</step><step id="fscreate-step-17"><para>Create the directory you want to mount as
an LOFS file system, if necessary.</para><screen># <userinput>mkdir</userinput> <replaceable>loopback-directory</replaceable></screen>
</step><step id="fscreate-step-35"><para>Grant the appropriate permissions and ownership
on the newly created directory.</para>
</step><step id="fapek"><para>Create the mount point where you want to mount the
LOFS file system, if necessary.</para><screen># <userinput>mkdir</userinput> <replaceable>/mount-point</replaceable></screen>
</step><step id="fscreate-step-18"><para>Mount the LOFS file system. </para><screen># <userinput>mount -F lofs</userinput> <replaceable>loopback-directory /mount-point</replaceable></screen><variablelist><varlistentry><term><replaceable>loopback-directory</replaceable></term><listitem><para>Specifies the file system to be mounted on the loopback mount
point.</para>
</listitem>
</varlistentry><varlistentry><term><replaceable>/mount-point</replaceable></term><listitem><para>Specifies the directory on which to mount the LOFS file system.</para>
</listitem>
</varlistentry>
</variablelist>
</step><step id="fscreate-step-26"><para>Verify that the LOFS file system has been
mounted.</para><screen># <userinput>mount -v</userinput></screen>
</step>
</procedure><example id="fncqy"><title>Creating and Mounting an LOFS File System</title><para>The following example shows how to create, mount, and test new software
in the <filename>/new/dist</filename> directory as a loopback file system
without actually having to install it.</para><screen># <userinput>mkdir /tmp/newroot</userinput>
# <userinput>mount -F lofs /new/dist /tmp/newroot</userinput>
# <userinput>chroot /tmp/newroot newcommand</userinput></screen>
</example><example id="fncqv"><title>Mounting an LOFS File System at Boot Time</title><para>You can set up the system
to automatically mount an LOFS file system at boot time by adding an entry
to the end of the <filename>/etc/vfstab</filename> file. The following example
shows an entry in the <filename>/etc/vfstab</filename> file that mounts an
LOFS file system for the root (<filename>/</filename>) file system on <filename>/tmp/newroot</filename>.</para><screen>/ - /tmp/newroot  lofs   -  yes  -</screen><para>Ensure that the loopback entries are the last entries in the <filename>/etc/vfstab</filename> file. Otherwise, if the <filename>/etc/vfstab</filename> entry
for a loopback file system precedes the file systems to be included in it,
the loopback file system cannot be mounted.</para>
</example><taskrelated role="see-also"><para>For more information on the <filename>/etc/vfstab</filename> file, see <olink targetptr="fsmount-81772" remap="internal">Field Descriptions for the /etc/vfstab File</olink>.</para>
</taskrelated>
</task>
</sect1>
</chapter>