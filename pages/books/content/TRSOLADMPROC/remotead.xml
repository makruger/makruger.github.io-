<?Pub UDT _bookmark _target?><?Pub EntList bsol dash hellip gt lt minus?><?Pub CX solbook(book(title()bookinfo()part()part(title()partintro()chapter()?><chapter id="remotead-1"><?Pub Tag atict:info tracking="on" ref="0"?><?Pub Tag atict:user
user="sharonr" fullname="Sharon Veach"?><title>Remote Administration in Trusted Extensions (Tasks)</title><indexterm><primary>administering</primary><secondary>remotely</secondary>
</indexterm><highlights><para>This chapter describes how to use Trusted Extensions administrative tools
to administer a remote system.</para><itemizedlist remap="jumplist"><listitem><para><olink targetptr="remotead-2" remap="internal">Secure Remote Administration
in Trusted Extensions</olink></para>
</listitem><listitem><para><olink targetptr="remotead-4" remap="internal">Methods for Administering Remote
Systems in Trusted Extensions</olink></para>
</listitem><listitem><para><olink targetptr="remotead-54" remap="internal">Remote Login by a Role in Trusted
Extensions</olink></para>
</listitem><listitem><para><olink targetptr="remotead-21" remap="internal">Administering Trusted Extensions
Remotely (Task Map)</olink></para>
</listitem>
</itemizedlist>
</highlights><sect1 id="remotead-2"><title>Secure Remote Administration in Trusted Extensions</title><indexterm><primary>remote administration</primary><secondary>defaults</secondary>
</indexterm><indexterm><primary>restricting</primary><secondary>remote access</secondary>
</indexterm><para>By default, Trusted Extensions does not allow remote administration. Remote
administration would present a significant security risk if users on remote
untrusted systems could administer systems that are configured with Trusted Extensions.
Therefore, systems are initially installed without the option of being remotely
administered.</para><para>Until the network is configured, all remote hosts are assigned the <literal>admin_low</literal> security template. Therefore, the CIPSO protocol is not
used or accepted for any connections. While in this initial state, systems
are protected from remote attacks by several mechanisms. Mechanisms include <literal>netservices</literal> settings, default login policy, and PAM policy.</para><itemizedlist><listitem><para>When the <literal>netservices</literal> Service Management
Facility (SMF) profile is set to <literal>limited</literal>, no remote services
except secure shell are enabled. However, the <command>ssh</command> service
cannot be used for remote logins because of the login and PAM policies.</para>
</listitem><listitem><para>The <literal>root</literal> account cannot be used for remote
logins because the default policy for <literal>CONSOLE</literal> in the <filename>/etc/default/login</filename> file prevents remote logins by <literal>root</literal>.</para>
</listitem><listitem><para>Two PAM settings also affect remote logins.</para><para>The <literal>pam_roles</literal> module always rejects local logins from accounts of type <literal>role</literal>. By default, this module also rejects remote logins. However,
the system can be configured to accept remote logins by specifying <literal>allow_remote</literal> in the system's <filename>pam.conf</filename> entry.</para><para>Additionally, the <literal>pam_tsol_account</literal> module rejects
remote logins into the global zone unless the CIPSO protocol is used. The
intent of this policy is for remote administration to be performed by another Trusted Extensions system.</para>
</listitem>
</itemizedlist><para>To enable remote login functionality, both systems must assign their
peer to a CIPSO security template. If this approach is not practical, the
network protocol policy can be relaxed by specifying the <literal>allow_unlabeled</literal> option in the <filename>pam.conf</filename> file. If either policy
is relaxed, the default network template must be changed so that arbitrary
machines cannot access the global zone. The <literal>admin_low</literal> template
should be used sparingly, and the <filename>tnrhdb</filename> database should
be modified so that the wildcard address <literal>0.0.0.0</literal> does not
default to the <literal>ADMIN_LOW</literal> label. For details, see <olink targetptr="remotead-21" remap="internal">Administering Trusted Extensions Remotely (Task Map)</olink> and <olink targetptr="managetnet-8" remap="internal">How to Limit the Hosts That Can Be Contacted on the
Trusted Network</olink>.</para>
</sect1><sect1 id="remotead-4"><title>Methods for Administering Remote Systems in Trusted Extensions</title><indexterm><primary>remote administration</primary><secondary>methods</secondary>
</indexterm><para>Typically, administrators use the <command>rlogin</command> and <command>ssh</command> commands to administer remote systems from the command line. The Solaris Management Console can
also be used. In Trusted CDE, the <command>dtappsession</command> program can remotely
launch Trusted CDE actions.Also, a virtual networking computer
(vnc) can be used to remotely display a multilevel desktop.</para><itemizedlist><para>The following methods of remote administration are possible in Trusted Extensions:</para><listitem><para>The root user can log in to a remote host from a terminal.
See <olink targetptr="remotead-18" remap="internal">How to Log In Remotely From the Command
Line in Trusted Extensions</olink>. This method works as it does on a Solaris system.
This method is insecure.</para>
</listitem><listitem><para>A role can log in to a remote host from a terminal in the
role workspace. See <olink targetptr="remotead-18" remap="internal">How to Log In Remotely
From the Command Line in Trusted Extensions</olink>.</para>
</listitem><listitem><para>Administrators can start a Solaris Management Console server that is running on
a remote system. See <olink targetptr="remotead-12" remap="internal">How to Remotely Administer
Systems by Using the Solaris Management Console From a Trusted Extensions
System</olink>.</para>
</listitem><listitem><para>Actions in the Trusted_Extensions folder can be started remotely
by using the <command>dtappsession</command> command. See <olink targetptr="remotead-13" remap="internal">How to Remotely Administer Trusted Extensions With
dtappsession</olink>.</para>
</listitem><listitem><para><indexterm><primary>Xvnc systems running Trusted Extensions</primary><secondary>remote access to</secondary></indexterm>A user can log in to a remote multilevel desktop
by using a vnc client program to connect to the Xvnc server on a Trusted Extensions system.
See <olink targetptr="remotead-20" remap="internal">How to Use Xvnc to Remotely Access a Trusted
Extensions System</olink>.</para>
</listitem>
</itemizedlist>
</sect1><sect1 id="remotead-54"><title>Remote Login by a Role in Trusted Extensions</title><indexterm><primary>roles</primary><secondary>remote login</secondary>
</indexterm><indexterm><primary>login</primary><secondary>remote by roles</secondary>
</indexterm><para>As in the Solaris OS, a setting in the <filename>/etc/default/login</filename> file
on each host must be changed to allow remote logins. Additionally, the <filename>pam.conf</filename> file might need to be modified. In Trusted Extensions, the
security administrator is responsible for the change. For the procedures,
see <olink targetptr="headl-9" remap="internal">Enable Remote
Login by root User in Trusted Extensions</olink> and <olink targetptr="headl-6" remap="internal">Enable Remote
Login by a Role in Trusted Extensions</olink>.</para><para>On both Trusted Extensions and Solaris hosts, remote logins might
or might not require authorization. <olink targetptr="manageusers-89" remap="internal">Remote
Login Management in Trusted Extensions</olink> describes the conditions and
types of logins that require authorization. By default, roles have the Remote
Login authorization.</para><sect2 id="remotead-63"><title>Remote Role-Based Administration
From Unlabeled Hosts</title><indexterm><primary>roles</primary><secondary>role assumption from unlabeled host</secondary>
</indexterm><para>In Trusted Extensions, users assume roles through the Trusted Path menu.
The roles then operate in trusted workspaces. By default, roles cannot be
assumed outside of the trusted path. If site policy permits, the security
administrator can change the default policy. Administrators of unlabeled hosts
that are running Solaris Management Console 2.1 client software can then administer trusted hosts.</para><itemizedlist><listitem><para>To change the default policy, see <olink targetptr="headl-6" remap="internal">Enable Remote
Login by a Role in Trusted Extensions</olink>.</para>
</listitem><listitem><para>To administer systems remotely, see <olink targetptr="remotead-18" remap="internal">How to Log In Remotely From the Command Line in Trusted
Extensions</olink>.</para>
</listitem>
</itemizedlist><para>This policy change only applies when the user on the remote unlabeled
system has a user account on the Trusted Extensions host. The Trusted Extensions user
must have the ability to assume an administrative role. The role can then
use the Solaris Management Console to administer the remote system.</para><caution><para>If remote administration from a non-Trusted Extensions host is
enabled, the administrative environment is less protected than a Trusted Extensions administrative
workspace. Be cautious when typing passwords and other secure data. As a precaution,
shut down all untrusted applications before starting the Solaris Management Console.</para>
</caution>
</sect2><sect2 id="manageusers-89"><title>Remote Login Management in Trusted Extensions</title><para>A remote login between two Trusted Extensions hosts is considered to be
an extension of the current login session.</para><para>An authorization is not required when the <command>rlogin</command> command
does not prompt for a password. If an <filename>/etc/hosts.equiv</filename> file
or a <filename>.rhosts</filename> file in the user's home directory on the
remote host lists either the username or the host from which the remote login
is being attempted, no password is required. For more information, see the <olink targetdoc="group-refman" targetptr="rhosts-4" remap="external"><citerefentry><refentrytitle>rhosts</refentrytitle><manvolnum>4</manvolnum></citerefentry></olink> and <olink targetdoc="group-refman" targetptr="rlogin-1" remap="external"><citerefentry><refentrytitle>rlogin</refentrytitle><manvolnum>1</manvolnum></citerefentry></olink> man pages.</para><para>For all other remote logins, including logins with the <command>ftp</command> command,
the Remote Login authorization is required.</para><para>To create a rights profile that includes the Remote Login authorization,
see <olink targetptr="usermgr-13" remap="internal">Managing Users and Rights With the Solaris
Management Console (Task Map)</olink>.</para>
</sect2>
</sect1><sect1 id="remotead-21"><title>Administering Trusted Extensions Remotely (Task
Map)</title><indexterm><primary>Administering Trusted Extensions Remotely (Task Map)</primary>
</indexterm><indexterm><primary>tasks and task maps</primary><secondary>Administering Trusted Extensions Remotely (Task Map)</secondary>
</indexterm><para>The following task map describes the tasks used to administer a remote Trusted Extensions system.</para><informaltable frame="all" pgwide="1"><tgroup cols="3" colsep="1" rowsep="1"><colspec colname="colspec0" colwidth="32.94*"/><colspec colname="colspec1" colwidth="33.09*"/><colspec colname="colspec2" colwidth="32.97*"/><thead><row><entry><para>Task</para>
</entry><entry><para>Description</para>
</entry><entry><para>For Instructions</para>
</entry>
</row>
</thead><tbody><row><entry><para>Enable <literal>root</literal> to remotely log in to a Trusted Extensions system.</para>
</entry><entry><para>Enables the <literal>root</literal> user to work remotely from a labeled
system.</para>
</entry><entry><para><olink targetptr="headl-9" remap="internal">Enable Remote
Login by root User in Trusted Extensions</olink></para>
</entry>
</row><row><entry><para>Enable a role to remotely log in to a Trusted Extensions system.</para>
</entry><entry><para>Allows any role to work remotely from a labeled system.</para>
</entry><entry><para><olink targetptr="headl-6" remap="internal">Enable Remote
Login by a Role in Trusted Extensions</olink></para>
</entry>
</row><row><entry><para>Enable remote login from an unlabeled system to a Trusted Extensions system.</para>
</entry><entry><para>Allows any user or role to work remotely from an unlabeled system.</para>
</entry><entry><para><olink targetptr="headl-11" remap="internal">Enable Remote
Login From an Unlabeled System</olink></para>
</entry>
</row><row><entry><para>Log in remotely to a Trusted Extensions system.</para>
</entry><entry><para>Logs in as a role to a Trusted Extensions system.</para>
</entry><entry><para><olink targetptr="remotead-18" remap="internal">How to Log In Remotely From the Command
Line in Trusted Extensions</olink></para>
</entry>
</row><row><entry morerows="2" rowsep="1"><para>Administer a system remotely.</para>
</entry><entry><para>Uses the <command>dtappsession</command> command to administer the remote
system with Trusted_Extensions actions.</para>
</entry><entry><para><olink targetptr="remotead-13" remap="internal">How to Remotely Administer Trusted Extensions
With dtappsession</olink></para>
</entry>
</row><row><entry><para>From a Trusted Extensions system, uses the Solaris Management Console to administer the remote
host.</para>
</entry><entry><para><olink targetptr="remotead-12" remap="internal">How to Remotely Administer Systems by
Using the Solaris Management Console From a Trusted Extensions System</olink></para>
</entry>
</row><row><entry><para>From an unlabeled system, uses the Solaris Management Console to administer remote Trusted Extensions hosts.</para>
</entry><entry><para><olink targetptr="remotead-16" remap="internal">How to Remotely Administer Systems by
Using the Solaris Management Console From an Unlabeled System</olink></para>
</entry>
</row><row><entry><para>Administer
and use a remote system</para>
</entry><entry><para>From any
client, uses the Xvnc server on the remote Trusted Extensions to display a multilevel
session back to the client</para>
</entry><entry><para><olink targetptr="remotead-20" remap="internal">How to Use Xvnc to Remotely Access a Trusted Extensions
System</olink></para>
</entry>
</row><row><entry><para>Enable specific users to log in to the global zone.</para>
</entry><entry><para>Uses user and network tools in the Solaris Management Console to enable specific users to
access the global zone.</para>
</entry><entry><para><olink targetptr="remotead-14" remap="internal">How to Enable Specific Users to Log In
Remotely to the Global Zone in Trusted Extensions</olink></para>
</entry>
</row>
</tbody>
</tgroup>
</informaltable><task id="remotead-18"><title>How to Log In Remotely From the Command Line
in Trusted Extensions</title><indexterm><primary>administering</primary><secondary>remotely from command line</secondary>
</indexterm><tasksummary><note><para>The <command>telnet</command> command cannot be used for remote
role assumption because this command cannot pass the primary and role identities
to the <literal>pam_roles</literal> module.</para>
</note>
</tasksummary><taskprerequisites><para>The user and the role must be identically defined on the local and the
remote system.</para><para>The role must have the Remote Login authorization. By default, this
authorization is in the Remote Administration, and the Maintenance and Repair
rights profiles.</para><para>The security administrator has completed the procedure <olink targetptr="headl-6" remap="internal">Enable Remote
Login by a Role in Trusted Extensions</olink> on every system that can
be remotely administered. If the system can be administered from an unlabeled
system, the procedure <olink targetptr="headl-11" remap="internal">Enable Remote
Login From an Unlabeled System</olink> has also been completed.</para>
</taskprerequisites><procedure remap="single-step"><step><para>From the workspace of a user who can assume a role, log in to
the remote host.</para><para>Use the <command>rlogin</command> command, the <command>ssh</command> command, or the <command>ftp</command> command.</para><itemizedlist><listitem><para>If the <command>rlogin -l</command> or <command>ssh</command> command
is used to log in, all commands that are in the role's rights profiles are
available.</para>
</listitem><listitem><para>If the <command>ftp</command> command is used, see the <olink targetdoc="group-refman" targetptr="ftp-1" remap="external"><citerefentry><refentrytitle>ftp</refentrytitle><manvolnum>1</manvolnum></citerefentry></olink> man page for the commands
that are available.</para>
</listitem>
</itemizedlist>
</step>
</procedure>
</task><task id="remotead-13"><title>How to Remotely Administer Trusted Extensions With <command>dtappsession</command></title><indexterm><primary>administering</primary><secondary>remotely with <command>dtappsession</command></secondary>
</indexterm><tasksummary><para>The <command>dtappsession</command> program enables an administrator
to administer a remote system that is running CDE.</para><para><command>dtappsession</command> is useful when a remote system does
not have a monitor. For example, <command>dtappsession</command> is often
used to administer domains on large servers. For more information, see the <olink targetdoc="group-refman" targetptr="dtappsession-1" remap="external"><citerefentry><refentrytitle>dtappsession</refentrytitle><manvolnum>1</manvolnum></citerefentry></olink> man page.</para>
</tasksummary><taskprerequisites><para>On a labeled system, you must be in an administrative role in the global
zone. On an unlabeled system, you must assume a role that is defined on the
remote system. You must then run the remote login from the role's profile
shell.</para>
</taskprerequisites><procedure><step performance="optional"><para>Create a workspace that is dedicated to
the remote session.</para><para>To avoid confusion between the remote CDE
applications and any local applications, dedicate an administrative role workspace
to this procedure. For details, see <olink targetdoc="trssug" targetptr="shared-commontasks-37" remap="external"><citetitle remap="section">How to Add a Workspace at a Particular Label</citetitle> in <citetitle remap="book">Solaris Trusted Extensions User&rsquo;s Guide</citetitle></olink>.</para>
</step><step><para>Log in to the remote host.</para><para>You can use the <command>rlogin</command> command or the <command>ssh</command> command.</para><screen>$ <userinput>ssh <replaceable>remote-host</replaceable></userinput></screen>
</step><step><para>Start remote administration.</para><para>In the terminal window,
type the <command>dtappsession</command> command followed by the name of the
local host.</para><screen>$ <userinput>/usr/dt/bin/dtappsession <replaceable>local-host</replaceable></userinput></screen><para>the Application Manager that is running on the remote host displays
on the local host. Also, an Exit dialog box appears.</para>
</step><step><para>Administer the remote host.</para><para>If you invoked the remote
session from Trusted CDE, you can use actions in the Trusted_Extensions folder.</para>
</step><step><para>When finished, click the Exit button.</para><mediaobject><imageobject><imagedata entityref="dtappexit.tiff"/>
</imageobject><textobject><simpara>Dialog box shows the name of a remote host and an Exit
button.</simpara>
</textobject>
</mediaobject><caution><para>Closing the Application Manager does not end the login session
and is not recommended.</para>
</caution>
</step><step><para>In the terminal window, exit the remote login session.</para><para>And
use the <command>hostname</command> command to verify that you are on your
local host.</para><screen>$ <userinput>exit</userinput>
$ <userinput>hostname</userinput>
<replaceable>local-host</replaceable></screen>
</step>
</procedure>
</task><task id="remotead-12"><title>How to Remotely Administer Systems by Using
the Solaris Management Console From a Trusted Extensions System</title><indexterm><primary>roles</primary><secondary>administering remotely</secondary>
</indexterm><indexterm><primary>administrative actions</primary><secondary>starting remotely</secondary>
</indexterm><indexterm><primary>administering</primary><secondary>remotely with Solaris Management Console</secondary>
</indexterm><tasksummary><para>The Solaris Management Console provides a remote administration interface to manage users,
rights, roles, and the network. You assume a role to use the Console. In this
procedure, you run the Console on the local system and specify the remote
system as the server.</para>
</tasksummary><taskprerequisites><para>You have completed the following procedures:</para><itemizedlist><listitem><para>On both systems &ndash;<olink targetptr="confsys-21" remap="internal">Initialize
the Solaris Management Console Server in Trusted Extensions</olink></para>
</listitem><listitem><para>On the remote system &ndash;<olink targetptr="headl-6" remap="internal">Enable Remote
Login by a Role in Trusted Extensions</olink> and <olink targetptr="txldap-19" remap="internal">Enable the
Solaris Management Console to Accept Network Communications</olink></para>
</listitem><listitem><para>On the remote system that is the LDAP server &ndash;<olink targetptr="confsys-10" remap="internal">Configuring
the Solaris Management Console for LDAP (Task Map)</olink></para>
</listitem>
</itemizedlist>
</taskprerequisites><procedure><step><para>On the local system, log in as the user who is defined identically
on the remote system.</para>
</step><step><para>Assume the role that you plan to use to administer the system.</para>
</step><step><para>In the role, start the Solaris Management Console.</para><para>For details, see <olink targetptr="confsys-21" remap="internal">Initialize the Solaris Management Console Server in
Trusted Extensions</olink>.</para><substeps><step><para>In the Server dialog box, type the name of the remote server.</para><stepalternatives><step><para>If you are using LDAP as a naming service, type the name of the
LDAP server.</para><para>Then, choose one of the following scopes.</para><stepalternatives><step><para>To administer the databases in the naming service, choose the <literal>Scope=LDAP</literal> toolbox.</para><screen>This Computer (<replaceable>ldap-server</replaceable>: <literal>Scope=LDAP, Policy=TSOL</literal>)</screen>
</step><step><para>To administer the local files on the LDAP server, choose the <literal>Scope=Files</literal> toolbox.</para><screen>This Computer (<replaceable>ldap-server</replaceable>: <literal>Scope=Files, Policy=TSOL</literal>)</screen>
</step>
</stepalternatives>
</step><step><para>If you are not using LDAP as a naming service, type the name of
the remote system that you want to administer.</para><para>Then, choose the <literal>Scope=Files</literal> toolbox.</para><screen>This Computer (<replaceable>remote-system</replaceable>: <literal>Scope=Files, Policy=TSOL</literal>)</screen>
</step>
</stepalternatives>
</step>
</substeps>
</step><step><para>Select a tool under System Configuration.</para><para>When you
select a tool such as User, a dialog box displays the Solaris Management Console server name, your
user name, your role name, and a place to type the role's password. Make sure
that the entries are correct.</para>
</step><step><para>In the role that is defined identically on the local and the remote
systems, log in to the Solaris Management Console server.</para><para>Type the role's password
and press Login as Role. You can now use the Solaris Management Console to manage the system.</para><note><para>Although you can use the Solaris Management Console to run <command>dtappsession</command>,
the simplest way to use <command>dtappsession</command> is described in <olink targetptr="remotead-13" remap="internal">How to Remotely Administer Trusted Extensions With
dtappsession</olink>.</para>
</note>
</step>
</procedure>
</task><task id="remotead-16"><title>How to Remotely Administer Systems by Using
the Solaris Management Console From an Unlabeled System</title><indexterm><primary>roles</primary><secondary>administering remotely</secondary>
</indexterm><indexterm><primary>administrative actions</primary><secondary>starting remotely</secondary>
</indexterm><indexterm><primary>administering</primary><secondary>remotely with Solaris Management Console</secondary>
</indexterm><tasksummary><para>In this procedure, you run the Solaris Management Console client and server on the remote
system, and display the Console on the local system.</para>
</tasksummary><taskprerequisites><para>The Trusted Extensions system must have assigned the label <constant>ADMIN_LOW</constant> to
the local system.</para><note><para>A system that is not running the CIPSO protocol, such as a Trusted
Solaris system, is an unlabeled system from the viewpoint of a Trusted Extensions system.</para>
</note><para>The Solaris Management Console server on the remote system must be configured to accept the
remote connection. For the procedure, see <olink targetptr="txldap-19" remap="internal">Enable the
Solaris Management Console to Accept Network Communications</olink>.</para><para>Both systems must have the same user who is assigned the same role that
can use the Solaris Management Console. The user can have the normal user's label range, but the
role must have the range from <constant>ADMIN_LOW</constant> to <constant>ADMIN_HIGH</constant>. </para><para>You must be in an administrative role in the global zone.</para>
</taskprerequisites><procedure><step><para>Enable the local X server to display the remote Solaris Management Console.</para><screen># xhost + <replaceable>TX-SMC-Server</replaceable>
# <userinput>echo $DISPLAY</userinput>
:<replaceable>n</replaceable>.<replaceable>n</replaceable></screen>
</step><step><para>On the local system, become the user who can assume a role for
the Solaris Management Console.</para><screen># su - <replaceable>same-username-on-both-systems</replaceable></screen>
</step><step><para>As that user, log in to the remote server as the role.</para><screen>$ rlogin -l <replaceable>same-rolename-on-both-systems</replaceable> <replaceable>TX-SMC-Server</replaceable></screen>
</step><step><para>Make sure that the environment variables that the Solaris Management Console uses have
the correct values.</para><substeps><step><para>Set the value of the <constant>DISPLAY</constant> variable.</para><screen>$ DISPLAY=<replaceable>local</replaceable>:<replaceable>n</replaceable>.<replaceable>n</replaceable>
$ export DISPLAY=<replaceable>local</replaceable>:<replaceable>n</replaceable>.<replaceable>n</replaceable></screen>
</step><step><para>Set the value of the <constant>LOGNAME</constant> variable to
the user name.</para><screen>$ LOGNAME=<replaceable>same-username-on-both-systems</replaceable>
$ export LOGNAME=<replaceable>same-username-on-both-systems</replaceable></screen>
</step><step><para>Set the value of the <constant>USER</constant> variable to the
role name.</para><screen>$ USER=<replaceable>same-rolename-on-both-systems</replaceable>
$ export USER=<replaceable>same-rolename-on-both-systems</replaceable></screen>
</step>
</substeps>
</step><step><para>In the role, start the Solaris Management Console from the command line.</para><screen>$ <userinput>/usr/sbin/smc &amp;</userinput></screen>
</step><step><para>Select a tool under System Configuration.</para><para>When you
select a tool such as User, a dialog box displays the Solaris Management Console server name, your
user name, your role name, and a place to type the role's password. Make sure
that the entries are correct.</para>
</step><step><para>As the role, log in to the server.</para><para>Type the role's
password and press Login as Role. You can now use the Solaris Management Console to manage the
system.</para>&noteldapsvr;
</step>
</procedure>
</task><task id="remotead-14"><title>How to Enable Specific Users to Log
In Remotely to the Global Zone in Trusted Extensions</title><indexterm><primary>users</primary><secondary>logging in remotely to the global zone</secondary>
</indexterm><indexterm><primary>global zone</primary><secondary>remote login by users</secondary>
</indexterm><tasksummary><para>The user's default label range and the zone's default behavior are changed
to enable remote login by a non-role. You might want to complete this procedure
for a tester who is using a remote labeled system. For security reasons, the
tester's system should be running a disjoint label from other users.</para>
</tasksummary><taskprerequisites><para>You must have a very good reason why this user can log in to the global
zone.</para><para>You must be in the Security Administrator role in the global zone.</para>
</taskprerequisites><procedure><step><para>To enable specific users to log in to the global zone, assign
them an administrative label range.</para><para>Use the Solaris Management Console to assign a
clearance of <constant>ADMIN_HIGH</constant> and a minimum label of <constant>ADMIN_LOW</constant> to each user. For details, see <olink targetptr="manageusers-14" remap="internal">How
to Modify a User's Label Range in the Solaris Management Console</olink>.</para><para>The user's labeled zones must also permit login.</para>
</step><step><para>To enable remote login from a labeled zone into the global zone,
do the following.</para><substeps><step><para>Add a multilevel port for remote login to the global zone.</para><para>Use the Solaris Management Console. Port 513 over the TCP protocol enables remote login.
For an example, see <olink targetptr="managezones-5" remap="internal">How to Create a Multilevel
Port for a Zone</olink>.</para>
</step><step><para>Read the <filename>tnzonecfg</filename> changes into the kernel.</para><screen># <userinput>tnctl -fz /etc/security/tsol/tnzonecfg</userinput></screen>
</step><step><para>Restart the remote login service.</para><screen># <userinput>svcadm restart svc:/network/login:rlogin</userinput></screen>
</step>
</substeps>
</step>
</procedure>
</task><task id="remotead-20"><title>How to Use Xvnc to Remotely Access a Trusted Extensions System</title><indexterm><primary>virtual network computing (vnc)</primary><see>Xvnc systems running Trusted Extensions</see>
</indexterm><indexterm><primary>Xvnc systems running Trusted Extensions</primary><secondary>remote access to</secondary>
</indexterm><indexterm><primary>remote multilevel desktop</primary><secondary>accessing</secondary>
</indexterm><indexterm><primary>accessing</primary><secondary>remote multilevel desktop</secondary>
</indexterm><indexterm><primary>desktops</primary><secondary>accessing multilevel remotely</secondary>
</indexterm><tasksummary><para>Virtual Network Computing (vnc) technology connects a client to a remote
server, then displays the desktop of the remote server in a window on the
client. Xvnc is the UNIX version of vnc, which is based on a standard X server.
In Trusted Extensions, a client on any platform can connect to an Xvnc that is
running Trusted Extensions software, log in to the Xvnc server, then display and
work on a multilevel desktop.</para>
</tasksummary><taskprerequisites><para>You have installed and configured Trusted Extensions software on the system
that is going to be used as the Xvnc server. You have created and booted the
labeled zones. Your Xvnc server recognizes the vnc clients by hostname or
IP address.</para><para>You are superuser in the global zone of the system that is going to
be used as the Xvnc server.</para>
</taskprerequisites><procedure><step><para>Configure the Xvnc server.</para><para>For more information, see
the <citerefentry><refentrytitle>Xvnc</refentrytitle><manvolnum>1</manvolnum></citerefentry>  and <citerefentry><refentrytitle>vncconfig</refentrytitle><manvolnum>1</manvolnum></citerefentry> man pages.</para><caution><para>If you are running the Solaris 10&nbsp;10/08 or the Solaris 10&nbsp;5/08 release, you
must patch your system before configuring the server. For a SPARC system,
install the latest version of patch 125719.  For an x86 system, install the
latest version of patch 125720.</para>
</caution><substeps><step><para>Create the Xservers configuration directory.</para><screen># <userinput>mkdir -p /etc/dt/config</userinput></screen>
</step><step><para>Copy the <filename>/usr/dt/config/Xservers</filename> file to
the <filename class="directory">/etc/dt/config</filename> directory.</para><screen># <userinput>cp /usr/dt/config/Xservers /etc/dt/config/Xservers</userinput></screen>
</step><step><para>Edit the <filename>/etc/dt/config/Xservers</filename> file to
start up the Xvnc program instead of Xserver or Xorg.</para><para>In this
example, the entry is configured to log in to the server without a password.
To successfully log in the desktop, the local UID must be <literal>none</literal> instead
of <literal>console</literal>.</para><para>The entry is split for display purposes. The entry must be on one line.</para><screen>#   :0  Local local_uid@console root /usr/X11/bin/Xserver :0 -nobanner
  :0  Local local_<userinput>uid@none</userinput> root <userinput>/usr/X11/bin/Xvnc</userinput> :0 -nobanner 
  -AlwaysShared -SecurityTypes None -geometry 1024x768x24 -depth 24</screen><note><para>A safer configuration is to require a password by using the <option>SecurityTypes
VncAuth</option> parameter. The <citerefentry><refentrytitle>Xvnc</refentrytitle><manvolnum>1</manvolnum></citerefentry> man page describes password requirements.</para>
</note>
</step><step><para>Reboot the server or start the Xvnc server.</para><screen remap="toolong"># <userinput>reboot</userinput></screen><para>After reboot, verify that the Xvnc program is running.</para><screen># <userinput>ps -ef | grep Xvnc</userinput>
  root  2145  932  0  Jan 18 ?  6:15 /usr/X11/bin/Xvnc :0 -nobanner 
  -AlwaysShared -SecurityTypes None -geometry 1024</screen>
</step>
</substeps>
</step><step><para>On every vnc client of the Trusted Extensions Xvnc server, install
vnc client software. </para><para>For the client system, you have a choice
of software. This example uses the Sun vnc software.</para><screen># <userinput>cd <replaceable>SUNW-pkg-directory</replaceable></userinput>
# <userinput>pkgadd -d . SUNWvncviewer</userinput></screen>
</step><step><para>In a terminal window on a vnc client, connect to the server.</para><screen>% <userinput>/usr/bin/vncviewer <replaceable>Xvnc-server-hostname</replaceable></userinput></screen>
</step><step><para>In the window that displays, type your name and password.</para><para>Continue with the login procedure. For a description of the remaining
steps, see <olink targetdoc="trssug" targetptr="uglog-18" remap="external"><citetitle remap="section">Logging In to Trusted Extensions</citetitle> in <citetitle remap="book">Solaris Trusted Extensions User&rsquo;s Guide</citetitle></olink>.</para><para>If you logged in to the server as superuser, you can administer the
server immediately. If you logged in to the server as a user, you must assume
a role to administer the system.</para>
</step>
</procedure>
</task>
</sect1>
</chapter><?Pub *0000039861 0?>