%!PS-Adobe-2.0 EPSF-2.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 8
%%For: (Kirk S Fielding) (Sun Microsystems, Inc.)
%%Title: (lofs-mount.eps)
%%CreationDate: (12/1/03) (10:03 AM)
%%BoundingBox: 0 -343 450 -90
%%HiResBoundingBox: 0.7705 -342.6182 449.2637 -90.771
%%DocumentProcessColors: Black
%%DocumentFonts: Courier
%%DocumentNeededFonts: Courier
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%%AI5_FileFormat 4.0
%%BeginPreview: 449 252 1 252
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000001AAAAAAAAA8000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000010000000008000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000010000000008000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000010000000008000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000010000000008000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000010000000008000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000010000200008000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000010000000008000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000010000000008000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000010000000008000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000010000000008000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000010000000008000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000010000000008000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000015555555558000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 00000BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBFBBBBBBBBBBBBBBBBBBBBBB8000000000000000000000000000000
% 000010000000000000000000000800000000000000000000000000000000400000000000800000000000000000000000000000000000000000
% 000010000000000000000000000800000000000000000000000000000000000000000000800000000002000000000000000000000000000000
% 000010000000000000000000000800000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 000010000000000000000000000800000000000000000000000000000000400000000000800000000002000000000000000000000000000000
% 000010000000000000000000000800000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 000010000000000000000000000800000000000000000000000000000000000000000000800000000002000000000000000000000000000000
% 000010000000000000000000000800000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 000010000000000000000000000800000000000000000000000000000000000000000000800000000002000000000000000000000000000000
% 555555555400000000000015555D55540000000000000000000000015555555550055555D55540055557555500000000000000000000000000
% 400000000200000000000020000800020000000000000000000000010000000008040000800020100000000080000000000000000000000000
% 400000000000000000000000000000010000000000000000000000010000000008040000000020100000000080000000000000000000000000
% 400000000200000000000020000000000000000000000000000000010000000008040000000020100000000080000000000000000000000000
% 400000000000000005150540000000010000000000000000000000010000000008040000000020100000000080000000000000000000000000
% 0000800003F1F8E00F1F8FE0000000000000000000000000000000010000000208040000000020100000000080000000000000000000000000
% 40149034000000300F1F8FC0024250010000000000000000000000010053005308040011010020100121140080000000000000000000000000
% 00208200020000300E000020021000010000000000000000000000011A22000208040068080020100003100080000000000000000000000000
% 40048000000000300C000000004200010000000000000000000000011002000008040040000020100000000080000000000000000000000000
% 0028E2360200000000018FE003DA60000000000000000000000000010A9B8A6188040028820020100083B80080000000000000000000000000
% 4000000001FC800000018FC0000000010000000000000000000000010000000008040000000020100000000080000000000000000000000000
% 400000000200800000038020000000000000000000000000000000010002000008040000000020100000000080000000000000000000000000
% 40000000000080300C018000000000010000000000000000000000010000000008040000000020100000000080000000000000000000000000
% 00000000020080200E038020000000000000000000000000000000010000000008040000000020100000000080000000000000000000000000
% 55555555540080300C018035555555570000000000000000000000015555555558055555555560155555555580000000000000000000000000
% 00200000000080300E000000380000000000000000000000000000000000600000000000000000000000000000000000000000000000000000
% 00200000000000300C000000300000000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 00200000000000200E000000380000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 002000000000000000018000300000000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 002000000000800000038000380000000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 002000000000800000018000300000000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 00000000000080200E038000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000080300C018000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 00000000000080300E03800000000000000000000000000000000001BBBBFBBBB0000000000000000000000000000000000000000000000000
% 00200000000080300C000000300000000000000000000000000000010000000008000000000000000000000000000000000000000000000000
% 00200000000080200E000000380000000000000000000000000000010000000008000000000000000000000000000000000000000000000000
% 00200000000000300C000000300000000000000000000000000000010000000008000000000000000000000000000000000000000000000000
% 002000000000000000038000380000000000000000000000000000010000000008000000000000000000000000000000000000000000000000
% 002000000000800000018000300000000000000000000000000000010000000008000000000000000000000000000000000000000000000000
% 00200000000080000003800038000000000000000000000000000001028A6A8A08000000000000000000000000000000000000000000000000
% 00000000000080300C018000000000000000000000000000000000010111015008000000000000000000000000000000000000000000000000
% 00000000000080300E038000000000000000000000000000000000010200080208000000000000000000000000000000000000000000000000
% 00000000000080300C018000000000000000000000000000000000010280481008000000000000000000000000000000000000000000000000
% 00200000000080200E000000380000000000000000000000000000010000000008000000000000000000000000000000000000000000000000
% 00200000000000300C000000300000000000000000000000000000010000000008000000000000000000000000000000000000000000000000
% 00200000000000200E000000380000000000000000000000000000010000000008000000000000000000000000000000000000000000000000
% 002000000000000000018000300000000000000000000000000000010000000008000000000000000000000000000000000000000000000000
% 00200000000080000003800038000000000000000000000000000001AAAAAAAAA8000000000000000000000000000000000000000000000000
% 002000000000800000018000300000000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 00000000000080300E038000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000080300C018000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 00000000000080200E038000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00200000000080300C000000300000000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 00200000000080200E000000380000000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 00200000000000300C000000300000000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 002000000000000000038000380000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 002000000000800000018000300000000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 002000000000800000038000380000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000080300C018000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 00000000000080200E038000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000080300C018000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 00200000000080200E000000380000000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 00200000000000300C000000300000000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 00200000000000200E000000380000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 002000000000000000018000300000000000000000000000000000000000400000000000000000000000000000000000000000000000000000
% 0020000000008000000380003800000000BBBBBBBBBBBBBBBBBBBBBBBBBBFBBBBBBBBBBBBBBBBBBBBBBBBBB000000000000000000000000000
% 002000000000800000018000300000000080000000000000000000000000400000000000000000000000001000000000000000000000000000
% 00000000000080200E038000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000080300C018000000000000080000000000000000000000000400000000000000000000000001000000000000000000000000000
% 00000000000080200E038000000000000080000000000000000000000000400000000000000000000000000000000000000000000000000000
% 00200000000080300C000000300000000080000000000000000000000000400000000000000000000000001000000000000000000000000000
% 00200000000080200E000000380000000080000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00200000000000300C000000300000000080000000000000000000000000400000000000000000000000001000000000000000000000000000
% 002000000000000000038000380000000080000000000000000000000000000000000000000000000000001000000000000000000000000000
% 0020000000008000000180003000015555D5554000000000000000015555555550000000000000000055555555540000000000000000000000
% 002000000000800000038000380004000000002000000000000000010000000008000000000000000040000000020000000000000000000000
% 00000000000080300C018000000004000000002000000000000000010000000008000000000000000040000000020000000000000000000000
% 00000000000080200E038000000004000000002000000000000000010000000008000000000000000040000000020000000000000000000000
% 00000000000080300C018000000004000000002000000000000000010000001008000000000000000040000000020000000000000000000000
% 00200000000080200E000000380004000000002000000000000000010000000008000000000000000000000000020000000000000000000000
% 00200000000000300C0000003000040A1101182000000000000000010180510808000000000000000041213401820000000000000000000000
% 00200000000000300E00000038000400002B0820000000000000000100000AC0080000000000000000000000B4020000000000000000000000
% 002000000000000000018000300004040000002000000000000000010000000008000000000000000040000000020000000000000000000000
% 0020000000008000000380003800040A29222C200000000000000001028A4A9A08000000000000000000A2B6A2820000000000000000000000
% 002000000000800000018000300004000000002000000000000000010000000008000000000000000040000000020000000000000000000000
% 00000000000080200E038000000004000000002000000000000000010000000008000000000000000040000000020000000000000000000000
% 00000000000080300C018000000004000000002000000000000000010000000008000000000000000040000000020000000000000000000000
% 00000000000080200E038000000004000000002000000000000000010000000008000000000000000000000000020000000000000000000000
% 00200000000080300C000000300005555555556000000000000000015555555558000000000000000055555555560000000000000000000000
% 00200000000080300E000000380000000080000000000000000000000000600000000000000000000000001800000000000000000000000000
% 00200000000000300C000000300000000080000000000000000000000000400000000000000000000000001000000000000000000000000000
% 002000000000000000038000380000000080000000000000000000000000000000000000000000000000000000000000000000000000000000
% 002000000000800000018000300000000080000000000000000000000000400000000000000000000000001000000000000000000000000000
% 002000000000800000038000380000000080000000000000000000000000400000000000000000000000000000000000000000000000000000
% 00000000000080300C018000000000000080000000000000000000000000400000000000000000000000001000000000000000000000000000
% 00000000000080200E038000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000080300C018000000000000080000000000000000000000000400000000000000000000000001000000000000000000000000000
% 00200000000080300E000000380003BBBBBBBBA00000000000000001BBBBFBBBB000000000000000003BBBBBBBB80000000000000000000000
% 00200000000000300C000000300004000000002000000000000000010000000008000000000000000040000000020000000000000000000000
% 00200000000000200E000000380004000000002000000000000000010000000008000000000000000000000000020000000000000000000000
% 002000000000000000018000300004000000002000000000000000010000000008000000000000000040000000020000000000000000000000
% 002000000000800000038000380004000000002000000000000000010000000008000000000000000040000000020000000000000000000000
% 002000000000800000018000300004000000002000000000000000010000000008000000000000000040000000020000000000000000000000
% 00000000000080200E038000000004000000002000000000000000010000000008000000000000000000000800020000000000000000000000
% 00000000000080300C018000000004000000002000000000000000010000000008000000000000000040000000020000000000000000000000
% 00000000000080300E038000000004000000002000000000000000010000000008000000000000000000000000020000000000000000000000
% 00200000000080300C000000300004000000002000000000000000010000000008000000000000000040000000020000000000000000000000
% 00200000000080200E000000380004000000002000000000000000010000000008000000000000000000002000020000000000000000000000
% 00200000000000300C000000300004000000002000000000000000010000000008000000000000000040000000020000000000000000000000
% 002000000000000000038000380004000000002000000000000000010000000008000000000000000040000000020000000000000000000000
% 002000000000800000018000300004000000002000000000000000010000000008000000000000000040000000020000000000000000000000
% 002000000000800000038000380007FFFFFFFFE00000000000000001FFFFFFFFF800000000000000007FFFFFFFFE0000000000000000000000
% 00000000000080300C018000000000000080000000000000000000000000400000000000000000000000001000000000000000000000000000
% 00000000000080300E038000000000000080000000000000000000000000000000000000000000000000001000000000000000000000000000
% 00000000000080300C018000000000000080000000000000000000000000400000000000000000000000001000000000000000000000000000
% 00200000000080200E000000380000000080000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00200000000000300C000000300000000080000000000000000000000000400000000000000000000000001000000000000000000000000000
% 00200000000000200E000000380000000080000000000000000000000000400000000000000000000000000000000000000000000000000000
% 002000000000000000018000300000000080000000000000000000000000400000000000000000000000001000000000000000000000000000
% 002000000000800000038000380000000080000000000000000000000000000000000000000000000000000000000000000000000000000000
% 002000000000800000018000300000000080000000000000000000000000400000000000000000000000001000000000000000000000000000
% 00000000000080300E038000000000000080000000000000000000000000000000000000000000000000001000000000000000000000000000
% 00000000000080300C018000000000000080000000000000000000000000400000000000000000000000001000000000000000000000000000
% 00000000000080200E038000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00200000000080300C000000300000000080000000000000000000000000400000000000000000000000001000000000000000000000000000
% 00200000000080200E000000380000000080000000000000000000000000400000000000000000000000000000000000000000000000000000
% 00200000000000300C000000300000000080000000000000000000000000400000000000000000000000001000000000000000000000000000
% 002000000000000000038000380000000080000000000000000000000000000000000000000000000000000000000000000000000000000000
% 002000000000800000018000300000000080000000000000000000000000400000000000000000000000001000000000000000000000000000
% 00201FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE000000000007FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE000000
% 00001000000080300C018000000800000000000010000000000000000000400000400000000000008000000000000100000000000002000000
% 00001000000080200E038000000800000000000000000000000000200000000000000000000000008000000000000100000000000002000000
% 00001000000080300C018000000800000000000010000000000000000000400000400000000000008000000000000100000000000002000000
% 00201000000080200E000000380800000000000000000000000000200000400000400000000000008000000000000100000000000002000000
% 00201000000000300C000000300800000000000010000000000000000000400000400000000000008000000000000100000000000002000000
% 00201000000000200E000000380800000000000000000000000000200000000000000000000000008000000000000100000000000002000000
% 002010000000000000018000300800000000000010000000000000000000400000400000000000008000000000000100000000000002000000
% 002010000000800000038000380800000000000010000000000000200000000000000000000000008000000000000100000000000002000000
% 7FFFFFFFFC0080000001803FFFFFFFFE00007FFFFFFFFE0000FFFFFFFFFC43FFFFFFFFF00007FFFFFFFFE00007FFFFFFFFC0000FFFFFFFFF80
% 00000000020080200E038020000000000000000000000200008000000004020000000010000400000000200008000000000000000000000000
% 40000000000080300C018000000000010000400000000200008000000004420000000010000400000000200008000000004000100000000000
% 40000000020080200E038020000000000000400000000200008000000004420000000010000400000000200008000000004000000000000000
% 40000000000080300C000000000000010000400000000200008000000004420000000010000400000000200008000000004000100000000000
% 00008000020080200E000020000000000000000020000200008000000004020000000010000400000000200008000200000000000000000000
% 40149034000000300C000000024250010000400130100200008019190004420025109010000400494500345008001302004000100121100000
% 0020820002000000000380200210000100000006A000020000800A08000402008400801FC804000104003C7808006A10000000100022800000
% 4004800000008000000180000042000100004000000002000080000000044200040000100804000000003C7808000000004000100004000000
% 0028E236020080000003802003DA60000000000218A002000080042D80040200A63890100804002F8E0020180800228A000000000002980000
% 40000000000080300C018000000000010000400000000200008000000004420000000010080400000000201808000000004000100000000000
% 40000000020080200E038020000000000000400000000200008000000004420000000010080400000000200008000000004000000000000000
% 40000000000080300C018000000000010000400000000200008000000004420000000010080400000000200008000000004000100000000000
% 00000000020080200E000020000000000000000000000200008000000004020000000010080400000000200008000000000000000000000000
% 7FFFFFFFFC0000300C00003FFFFFFFFF00007FFFFFFFFE0000FFFFFFFFFC43FFFFFFFFF00007FFFFFFFFE0180FFFFFFFFFC0001FFFFFFFFF80
% 00000000000000300E000000000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000
% 000000000000000000018000000000000000000000000000000000000000400000000000000000000000001800000000000000000000000000
% 000000000000800000038000000000000000000000000000000000000000000000000000080000000000001800000000000000000000000000
% 000000000000800000018000000000000000000000000000000000000000400000000000080000000000001800000000000000000000000000
% 00000000000080200E038000000000000000000000000000000000000000400000000000080000000000001800000000000000000000000000
% 00000000000080300C018000000000000000000000000000000000000000400000000000080000000000000000000000000000000000000000
% 00000000000080200E038000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000
% 00000000000080300C000000000000000000000000000000000000000000400000000000080000000000000000000000000000000000000000
% 00000000000080300E000000000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000
% 00000000000000300C000000000000000000000000000000000000000000400000000000000000000000001800000000000000000000000000
% 000000000000000000038000000000000000000000000000000000000000000000000000080000000000001800000000000000000000000000
% 000000000000800000018000000000000000000000000000000000000000400000000000080000000000001800000000000000000000000000
% 000000000000800000038000000000000000000000000000000000000000400000000000080000000000001800000000000000000000000000
% 00000000000080300C018000000000000000000000000000000000000000400000000000080000000000001800000000000000000000000000
% 00000000000080200E038000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000
% 00000000000080300C018000000000000000000000000000000000000000400000000000080000000000000000000000000000000000000000
% 00000000000080300E000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000
% 00000000000000300C0000000000000000000001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800001800000000000000000000000000
% 00000000000000200E000000000000000000000000000000000002000000000000040000000000000800001800000000000000000000000000
% 000000000000000000018000000000000000000100000000000002000000000000040000000000000800001800000000000000000000000000
% 000000000000800000038000000000000000000000000000000002000000000000040000080000000800001800000000000000000000000000
% 000000000000800000018000000000000000000100000000000002000000000000040000080000000800001800000000000000000000000000
% 00000000000080200E038000000000000000000000000000000002000000000000040000080000000800001800000000000000000000000000
% 00000000000080300C018000000000000000000100000000000002000000000000040000080000000800000000000000000000000000000000
% 00000000000080300E038000000000000000000100000000000002000000000000040000080000000800000000000000000000000000000000
% 00000000000080300C000000000000000000000100000000000002000000000000040000080000000800000000000000000000000000000000
% 00000000000080200E00000000000000000FFFFFFFFFC0001FFFFFFFFF80001FFFFFFFFF00003FFFFFFFFE1800000000000000000000000000
% 00000000000000300C000000000000000008000000004000100000000000000000000001000040000000011800000000000000000000000000
% 000000000000000000038000000000000008000000004000100000000080002000000000080040000000001800000000000000000000000000
% 000000000000800000018000000000000008000000004000100000000000000000000001080040000000011800000000000000000000000000
% 000000000000800000038000000000000008000000004000100000000080002000000000080000000000001800000000000000000000000000
% 00000000000080300C018000000000000008000000004000100000000000000000000001080040000000011800000000000000000000000000
% 00000000000080300E038000000000000008028A428040001000933C00800020008A2801080000048C48010000000000000000000000000000
% 00000000000080300C018000000000000008000000004000100004100000000001204001080040000200010000000000000000000000000000
% 00000000000080200E000000000000000008000002004000100090800080002002080000080000021200000000000000000000000000000000
% 00000000000000300C000000000000000008041C42404000100055100000000000440001000040000640011800000000000000000000000000
% 00000000000000200E000000000000000008000000004000100000000080002000000000000040000000001800000000000000000000000000
% 000000000000000000018000000000000008000000004000100000000000000000000001000040000000011800000000000000000000000000
% 000000000000800000038000000000000008000000004000100000000080002000000000080000000000001800000000000000000000000000
% 000000000000800000018000000000000008000000004000100000000000000000000001080040000000011800000000000000000000000000
% 00000000000080300E03800000000000000FFFFFFFFFC0001FFFFFFFFF80003FFFFFFFFF08003FFFFFFFFF1800000000000000000000000000
% 00000000000080300C018000000000000000000100000000000007000000000000000000080000000000000000000000000000000000000000
% 00000000000080200E038000000000000000000100000000000006000000000000000000080000000000000000000000000000000000000000
% 00000000000080300C000000000000000000000000000000000007000000000000000000080000000000000000000000000000000000000000
% 00000000000080200E000000000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000
% 00000000000000300C000000000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000
% 000000000000000000038000000000000000000300000000000000000000000000000000080000000000001800000000000000000000000000
% 000000000000800000018000000000000000000100000000000007000000000000000000080000000000001800000000000000000000000000
% 000000000000800000038000000000000000000300000000000007000000000000000000080000000000001800000000000000000000000000
% 000000000000803F1F8FC7E3F1F8FC7E3F1F8FC700000000000007000000000000000000080000000000001800000000000000000000000000
% 00000000000080000E038000000000000000000000000000000006000000000000000000080000000000000000000000000000000000000000
% 00000000000080000C018000000000000000000000000000000007000000000000000000080000000000000000000000000000000000000000
% 00000000000080000E000000000000000000000000000000000006000000000000000000080000000000000000000000000000000000000000
% 00000000000000000C000000000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000
% 00000000000000000E000000000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000
% 000000000000000000018000000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000
% 000000000000800000038000000000000000000000000000000007000000000000000000080000000000001800000000000000000000000000
% 000000000000800000018000000000000000000000000000000007000000000000000000080000000000001800000000000000000000000000
% 000000000000F9F8FE7FBF9F8FE7E3F9F8FE7E3F9F8FE7E3F9F8FE7E3F9F8FE7E3F9F8FE780000000000001800000000000000000000000000
% 00000000000000000C038000000000000000000000000000000007000000000000000000000000000000000000000000000000000000000000
% 00000000000000000E038000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000
% 00000000000000000C000000000000000000000000000000000007000000000000000000000000000000000000000000000000000000000000
% 00000000000000000E000000000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000
% 00000000000000000C000000000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000
% 000000000000000000038000000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000
% 000000000000000000018000000000000000000000000000000007000000000000000000000000000000001800000000000000000000000000
% 0000000000000000000382A2A0A8A82A2A0A8A82A2A0A8A82A2A0E000000000000000000000000000000001800000000000000000000000000
% 00000000000000000C01C7E3F1F8FC7E3F1F8FC7E3F1F8FC7E3F1F000000000000000000000000000000001800000000000000000000000000
% 00000000000000000E01C7E3F1F8FC7E3F1F8FC7E3F1F8FC7E3F1E000000000000000000000000000000000000000000000000000000000000
% 00000000000000000C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000E000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000C000000000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000
% 00000000000000000E000000000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000
% 000000000000000001414150505414150505414150505414150505414150505414150505414150505414151800000000000000000000000000
% 00000000000000000FE7F3F8FCFE7F3F8FCFE7F3F8FCFE7F3F8FCFE7F3F8FCFE7F3F8FCFE7F3F8FCFE7F3F9800000000000000000000000000
%%EndPreview
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 131071 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 237.5 -264.5 237.5 -264.5
%AI3_TileBox: -59.5005 -615.5 532.5 122.5
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -283 112 1 1018 725 18 1 1 3 40 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:-59.5005 -615.5
%%AI3_PaperRect:-9 783 603 -9
%%AI3_Margin:9 -40 -9 9
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI7_Thumbnail: 128 72 8
%%BeginData: 8408 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD3FFF7DFD0BA8FD74FFA8FD05FFA8FD04FF7DFD74FFA8FD05FF7D
%FD04FFA8FD74FFA8FD05FFA8FD04FF7DFD74FFFD05A87DFD05A8FD7AFF7D
%FD40FFA8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87D
%A8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8
%A87DA8A8A87D7DA8A87DA8A8A87DA8A8A87DA87DA87DA8A8A87DA8A8A87D
%FD04A8FD25FFA8FD18FF7DFD25FF7DFD0CFFA8FD0DFFA8FD25FFA8FD18FF
%A8FD25FFA8FD0CFFA8FD0DFFA8FD20FF52A87DA87DA87DA87DA87DFD0EFF
%7D7DA87DA87DA87DA87DA87DFD1AFF7D7DA87DA87DA87DA87DA87DFF7DA8
%7DA87DA87DA87DA87D7DFFA87DA87DA87DA87DA87DA87DFD1BFFA8FFFFFF
%7DA8FF7DFFFFA8A8FF7DA8FFA8FFFF277DF8F8A8F827FFFFFFA8FFA8FFA8
%FFFFA8FD1AFFA8A8A8FFA8FFA8FFA87DA8A8FFA8FFFFFFA87DFFFFA8A8FF
%A8FF7DFFFFFFA8A8A8FFA8FFFFA8FD1BFF7DFFFFA852A8A87D7DFF7DA87D
%FFFFFFA8FFFF7DFFFF52FF527DFFFFA87DFF7D7DA8FFFF7DFD1AFFA8527D
%7DA8527D7D7D52FF7DFF7DFFFF7D527DA8FF7DA8FFA8FFA8FFFFFF7DA852
%FF7DFFFF7DFD1BFFA8FD09FFA8FFFFA8FFFFA8FFFF52FFFFF8FFA87DFD0A
%FFA8FD1AFFA8FFFFFFA8FD06FFA8FFA8FD0AFFA8FFA8FD0AFFA8FD1BFF7D
%A852A87DA87DA87DA8A8FFFFA8FFFF7DFFFF27FFFF7DFFFFA87D7D27A87D
%A87DA87DA8A8FD1BFF7DA87DA87DA87DA87DA8A8FFA8A87DA87DA87DA87D
%A87DFFFFFF7DA87DA87DA87DA87DA8A8FD1DFFA8FD0AFFA8FD05FF7DFFFF
%F8FD04FF7D7DFD27FFA8FD3DFFA8FD0AFFA8FFFF7DFFFF27FFFF27FD04FF
%A87DFD22FFA87DA87DA87DA87DA87DA8A8FD37FFA8FD10FF52FFFF7DFD04
%FFA87DFD22FFA8FFFFA8A8A8FFA8FFFFFFA8FD37FFA8FD0AFFA8FFFFA8FF
%FF52FFFFF8FD04FFA87DFD22FFA8FFFF527D7DA852FF52FF7DFD37FFA8FD
%0AFFA8FFFFA8FFFF27FFFF7DFD04FFA87DFD22FFA8FD0AFFA8FD37FF7DFD
%0AFFA8FFFFA8FFFF7DFFFFF8FD04FFA852FD22FFA87DA87DA87DA87DA87D
%A8A8FD42FFA8FFFFA8FFFF27FFFFF8FD2DFFA8FD3DFF7DFD0AFFA8FFFFA8
%FFFF52FFFF52FD04FFA852FD27FF7DFD3DFFA8FD0AFFA8FD05FF7DFFFFF8
%FD04FFA87DFD27FFA8FD3DFFA8FD0AFFA8FFFF7DFFFF27FFFF52FD04FFA8
%7DFD27FF7DFD3DFFA8FD0AFFA8FD05FF7DFFFF52FD04FFA87DFD0AFFFD1D
%A87DFD1EA8FD1FFFA8FD0AFFA8FFFF7DFFFF27FFFFF8FD04FFA87DFD09FF
%7DFD1DFF7DFD1EFFA8FD1EFFA8FD0AFFA8FFFFA8FFFF27FFFF7DFD04FFA8
%7DFD09FFA8FD1DFFA8FD1EFFA8FD1EFFA8FD0AFFA8FFFFA8FFFF7DFFFFF8
%FD04FFA87DFD04FF7D7DA87DA87DA87DA87D7DFD13FFA87DA87DA87DA87D
%A87DA8A8FD12FFA87DA87DA87DA87DA87DA87DFD24FFA8FFFFA8FFFF27FF
%FF52FD04FFA8A8FD04FFA8FFFFA8A8A8FFA8A8FFA8FD13FFA8FFFFA8A8A8
%FFFF7DFFFFA8FD12FFA8FFFFA8A8FFA8A8FFFFA8A8FD19FF7DFD0AFFA8FF
%FFA8FFFF7DFFFF27FD04FFA852FD04FFA8FFFF527D7DA8527D7DA8FD13FF
%A8FFFF527D7D7D527D7DFF7DFD12FFA8FFFF527D7D7D527D7DA87DFD24FF
%A8FFFFA8FFFF52FFFFF8FD04FFA8A8FD04FFA8FD09FF7DFD13FF7DFD0AFF
%A8FD12FFA8FD0AFFA8FD19FF7DFD0AFFA8FFFF7DFFFF27FFFF7DFD04FFA8
%52FD04FFA87DA87DA87DA87DA87D7DFD13FFA87DA87DA87DA87DA87DA8A8
%FD12FFA87DA87DA87DA87DA87DA8A8FD19FFA8FD0AFFA8FD05FFA8FFFFF8
%FD04FFA87DFD09FFA8FD1DFFA8FD1EFFA8FD1EFFA8FD0AFFA8FFFF7DFFFF
%27FFFF27FD04FFA87DFD04FFA87DA87DA852A87DA87DA8FD13FFA87DA87D
%A852A87DA87DA8A8FD13FF7DA87DA87D7D7DA87DA8A8FD19FFA8FD0AFFA8
%FFFFA8FFFF52FFFF7DFD04FFA87DFD04FF7DFD09FFA8FD13FFA8FD0AFFA8
%FD12FF7DFD0AFFA8FD19FFA8FD0AFFA8FFFFA8FFFF52FFFFF8FD05FF7DFD
%04FFA8FD05FFA8FFFFFFA8FD13FFA8FD05FFA8FD04FF7DFD12FFA8FD06FF
%A8FFFFFF7DFD19FFA8FD0AFFA8FFFFA8FFFF27FFFF7DFD04FFA87DFD04FF
%A8FD05FFA8FFFFFFA8FD13FFA8FD05FF7DFD04FFA8FD12FFA8FD05FFA8FD
%04FFA8FD19FF7DFD0AFFA8FFFFA8FFFF7DFFFFF8FD04FFA852FD04FF7D7D
%A87DA87DA87DA87D7DFD13FFA87DA87DA87DA87DA87DA87DFD12FF7D7DA8
%7DA87DA87DA87DA87DFD24FFA8FFFFA8FFFF27FFFFF8FD04FFA8FD0AFFA8
%FD1DFFA8FD1EFF7DFD1EFF7DFD0DFFA8FFFF52FFFF52FD04FFA852FD09FF
%7DFD1DFF7DFD1EFFA8FD1EFFA8FD0AFFA8FD05FF7DFFFFF8FD04FFA8A8FD
%09FFA8FD1DFFA8FD1EFFA8FD1EFFA8FD0AFFA8FFFF7DFFFF27FFFF52FD04
%FFA87DFD09FF7DFD1DFF7DFD1EFFA8FD1EFFA8FD0AFFA8FD05FF7DFFFF52
%FD04FFA87DFD09FFA8FD1DFFA8FD1EFFA8FD1EFFA8FFFF7D7DA87DA87DA8
%7D7D7DA852A87D277DA8F8A87DA87DA852A852A87DA87DA87DA87DA87DA8
%7DA87DA852A87DA87DA87DA87DA87DA87DA87DA87DFD05FF7DFD06FF7D7D
%A87DA87DA87DA87DA87DA87DA87D7D7DA87DA87DA87DA87DA87DA87DA852
%A87DA87DA87DA87DA87DA87DA87DA87DFD07FFA8FFFFA8FD07FFA8FFFFA8
%FFFF27FFFFA8FD04FFA87DFFA8FD0FFFA8FD0FFFA8FD05FFA8FD06FFA8FD
%0FFFA8FD0EFFA8FD0FFFA8FD05FF7DA852A87D7D7DA87DA87DFFFFA8FFFF
%A8FFFF7DFFFFF8FFFFA87D7D52A87DA87DA87DA8A8FD04FF7D7DA87DA87D
%A87DA87DA8FD04FFA8A87DA87DA87DA87DA87DA87DFF7DA87DA87D7D7DA8
%7DA87DFD04FFA87DA87DA87D7D7DA87DA8A8FD04FFA87DA87DA87DA87DA8
%7DA8A8FD04FFA87DA87DA87DA87DA87DA8A8FFFFA87DFFFF7DFFFFA8FFFF
%A8FFFFA8FFFF27FFFF27FFFFA8FFFFFFA8FFA8FFA8FFFFA8FD04FFA8FFFF
%A8FFA8A8FFA8FF7DFD04FFA8FD04FFA8FFFFA8FFFF7DA8FFA8FFFFFF7DA8
%FF7DFFFFA8FD04FFA8FFFFFFA8FFA8FFA8FFFFA8FD04FFA8FFFFFFA8A8A8
%FFA8FFFFA8FD04FFA8FFFFFFA8A8FFFFA8FF7D7DFFFFA852A8A87D7DFF7D
%FD05FFA8FFFF7DFFFF27FFFFA8FFFFA87DFF7D7DA8FFFF7DFD04FFA8FFFF
%527D7DFF7DA8FFA8FD04FF7DFFFFFF7DA852FF52FFFFA87DFF7DFFFFA852
%A8A87D7DFF52A8A8A8FFA8FFFFFF7D7DA87D7DFFFF277D527DFFA8FFFF7D
%527DFF7DA8FFFF7DFD04FFA8FFFFA87D527D7DA8FFA8A8FD09FFA8FFFFA8
%FFFFA8FFFF52FFFFF8FFFFA8FD0AFFA8FD04FFA8FD09FFA8FD04FFA8FD0A
%FFA8A8FFA8FD09FFA8FFFFA8FFA8FD0AFFA8FFA87DFFA8FD0AFFA8FD04FF
%A8FD09FFA87DA87DA87DA87DA87DA87DFFFFA8FFFF7DFFFF27FFFF52FFFF
%A87DA87DA87DA87DA87DA8A8FD04FF7D7DA87DA87DA87DA87D7DFD04FFA8
%A87DA87DA87DA87DA87D7D7DFF7DA87DA87DA87DA87DA87DFFFFA8FFA87D
%A87DA87DA87DA87DA87DFFA87DFFA87DA87DA87DA87DA87DA8A8FD04FFA8
%7DA87DA87DA87DA87D7DFD0DFFA8FD05FFA8FFFFF8FD2DFFA8FD0EFFA8FD
%0EFFA852FD29FFA8FFFF7DFFFF27FFFF27FD2DFF7DFD0EFFA8FD0EFFA8A8
%FD29FFA8FFFFA8FFFF52FFFF7DFD2DFFA8FD1DFFA852FD29FFA8FFFFA8FF
%FF52FFFFF8FD2DFF7DFD0EFFA8FD0EFFA87DFD29FFA8FFFFA8FFFF27FFFF
%7DFD16FFA8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87D7DA8A8
%7DA8A8A87DA8A8A87DA8A8A852A8A8A87DA8A8A87DFD07FF7DFD2CFFA8FF
%FF7DFFFFF8FD16FFA8FD0EFF7DFD0FFF7DFD06FFA8FD08FF7DFD05FF7D52
%FD29FFA8FFFFA8FFFF27FFFFF8FD16FFA8FD0EFFA8FD0FFFA8FD06FFA8FD
%08FFA8FD06FFA8FD2CFFA8FFFF52FFFF52FD10FFA87DA87DA87DA87DA87D
%A87DFD04FFA87DA87DA87DA87DA87DA8A8FD04FF7D7DA87DA87DA87DA87D
%7DFFA8FFFFFF7D7DA87DA87DA87DA87DA87D7DFD29FF7DFD05FF7DFFFFF8
%FD10FFA8FFFFFFA8A8FFA8A8FFFFA8FD04FFA8FFFFFFA8FFA8FFA8FFFFA8
%FD04FFA8FFFFFFA8A8A8FFA8FF7DFFA8FFFFFFA8FFFFFFA8FFFFA8FFFF7D
%A852FD29FFA8FFFF7DFFFF27FFFF52FD10FFA8FFFFFF7D52FF527D7DFF7D
%FD04FFA8FFFFA87DFF7D7DA8FFFF7DFD04FFA8FFFF7D527DFF7DA8FFA8FF
%A8FFFFFFA8FFFF7DA852FF52FFFFA8A8A8FD29FFA8FD05FFA8FFFF52FD10
%FFA8FD0AFFA8FD04FFA8FD0AFFA8FD04FFA8FD09FFA8FFA8FFFFFFA8FD09
%FFA8A852FD29FFA8FFFF7DFFFF27FFFFF8FD11FF7DA87DA87D7D7DA87DA8
%A8FD04FFA87DA87DA8527D7DA87DA8A8FD04FFA87DA87DA87DA87DA87D7D
%FFA8FFFFFFA87DA87DA87DA87DA87DA8A8A8FD29FFA8FFFFA8FFFF27FFFF
%A8FD25FFA8A8FD15FFA8FD0EFFA87DFD29FFA8FFFFA8A8A87DA8A8F8FF7D
%FD05A87DFF7DFFFD06A87DFF7DA8A8A8FD0EFF52A8FD15FFA8FD0EFF7D52
%FD29FFA8FD05FF27FFFF52FD25FF7DA8FD15FFA8FD0FFFA8FD2FFF7DFFFF
%27FD25FF7DFD16FFA8FD0EFF7D7DFD29FFFD06A827FF7DF8FD06A87DFFFD
%04A8FFA87DFFA8FF7DA8FFFD04A8FF7DFD06A8FF7DFFA8527DA8A8A87DFF
%FD04A8FFA87DFFA8FF7DA8FFFD04A8FD0EFFA87DFD2FFF27FFFF52FD25FF
%7DA8FD24FFA87DFD2FFFA8FFFFF8A87D52A852A8527DA87DA8A852A852A8
%7D7DA87D7DA852A8527DA87DA87D52A8527D7D7DA852A8FD24FFA852FD2F
%FF27FFFF52FF52FD057D52A852A8FD067D52A852FD057D52A852A8FD067D
%52A852A8FD24FFA8A8FD2FFF52FD4EFFA852FD2FFF52277D27525227A827
%277D277D27277D277D52277D27525227A827527D277D27277D277D52277D
%27525227A827527D277D27277D277D5227A8275252277D27527D277D2727
%7D277D5227A8275252275252FD1BFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Courier
userdict /_useSmoothShade false put
userdict /_aicmykps true put
userdict /_forceToCMYK true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _Courier Courier
[/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
[161/degree 173/notequal 176/infinity/plusminus/lessequal/greaterequal
181/mu/partialdiff/summation/product/pi/integral 189/Omega 
195/radical 197/approxequal 198/Delta 214/divide/lozenge 240/apple
/_Symbol_/Symbol 0 0 0 TZ
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (Art Brush Tool)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (Art Brush Tool)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Undo New Calligraphic Brush) (Calligraphic Brush Tool)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
-7954 -0.9849 m
8429 -0.9849 L
(N) *
0.0073 7927 m
0.0073 -8456 L
(N) *
450.0156 7927 m
450.0156 -8456 L
(N) *
-7954 -432.9854 m
8429 -432.9854 L
(N) *
1 Ap
0 R
0 G
0.5 w
347.8535 -241.75 m
347.8535 -177.8501 L
136.2744 -177.8501 L
136.2744 -241.7344 L
S
u
0 O
1 g
154.7319 -200.7915 m
117.5957 -200.7915 L
117.5957 -186.8428 L
154.7319 -186.8428 L
154.7319 -200.7915 L
b
0 To
1 0 0 1 136.272 -195.8857 0 Tp
0 Tv
TP
-13.4998 0 Td
0 Tr
0 g
1 w
%_ 0 50 XQ
/_Courier 9 7.2269 -2.2409 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
1 Ta
0 1 2 2 3 Th
0 Tq
240 Tg
10 0 Tl
0 Tc
0 Tw
(zonea) Tx 
(\r) TX 
TO
U
u
1 g
0 R
0 G
0.5 w
366.3223 -200.7915 m
329.1855 -200.7915 L
329.1855 -186.8428 L
366.3223 -186.8428 L
366.3223 -200.7915 L
b
0 To
1 0 0 1 347.8613 -195.8857 0 Tp
0 Tv
TP
-13.4998 0 Td
0 Tr
0 g
1 w
(zonec) Tx 
(\r) TX 
TO
U
0 Ap
8429 -149.4844 m
(N) *
-7954 -149.4844 m
(N) *
u
1 Ap
0 R
0 G
0.5 w
218.9785 -250.7813 m
218.9785 -241.7422 L
19.6992 -241.7422 L
19.6992 -250.7656 L
S
0 Ap
108.6924 -241.7109 m
108.6924 -250.7656 l
S
163.8281 -241.7109 m
163.8281 -250.7656 l
S
u
0 To
1 0 0 1 19.6968 -259.7783 0 Tp
0 Tv
TP
-10.7998 0 Td
0 Tr
0 O
0 g
1 w
(sbin) Tx 
(\r) TX 
TO
1 Ap
0 R
0 G
0.5 w
38.1567 -264.6836 m
1.0205 -264.6836 L
1.0205 -250.7354 L
38.1567 -250.7354 L
38.1567 -264.6836 L
s
U
u
0 To
1 0 0 1 108.6982 -259.7783 0 Tp
0 Tv
TP
-8.0999 0 Td
0 Tr
0 O
0 g
1 w
(usr) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
127.1587 -264.6836 m
90.022 -264.6836 L
90.022 -250.7354 L
127.1587 -250.7354 L
127.1587 -264.6836 L
s
U
u
0 To
1 0 0 1 163.8457 -259.7783 0 Tp
0 Tv
TP
-8.0999 0 Td
0 Tr
0 O
0 g
1 w
(etc) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
182.3066 -264.6836 m
145.1699 -264.6836 L
145.1699 -250.7354 L
182.3066 -250.7354 L
182.3066 -264.6836 L
s
U
u
0 To
1 0 0 1 218.9863 -259.7783 0 Tp
0 Tv
TP
-8.0999 0 Td
0 Tr
0 O
0 g
1 w
(var) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
237.4473 -264.6836 m
200.3105 -264.6836 L
200.3105 -250.7354 L
237.4473 -250.7354 L
237.4473 -264.6836 L
s
U
U
334.1934 -123.0156 m
334.1934 -113.9775 L
19.7007 -113.9775 L
19.7007 -123 L
S
0 Ap
241.959 -104.9297 m
241.959 -282.6875 l
S
108.6938 -113.9463 m
108.6938 -123.001 l
S
288.0586 -113.9463 m
288.0586 -123.001 l
S
u
0 To
1 0 0 1 19.6982 -132.0132 0 Tp
0 Tv
TP
-10.7998 0 Td
0 Tr
0 O
0 g
1 w
(sbin) Tx 
(\r) TX 
TO
1 Ap
0 R
0 G
0.5 w
38.1582 -136.9189 m
1.022 -136.9189 L
1.022 -122.9702 L
38.1582 -122.9702 L
38.1582 -136.9189 L
s
U
u
0 To
1 0 0 1 108.6997 -132.0132 0 Tp
0 Tv
TP
-8.0999 0 Td
0 Tr
0 O
0 g
1 w
(usr) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
127.1602 -136.9189 m
90.0234 -136.9189 L
90.0234 -122.9702 L
127.1602 -122.9702 L
127.1602 -136.9189 L
s
U
u
0 O
1 g
260.4121 -136.9189 m
223.2754 -136.9189 L
223.2754 -122.9702 L
260.4121 -122.9702 L
260.4121 -136.9189 L
b
0 To
1 0 0 1 241.9512 -132.0132 0 Tp
0 Tv
TP
-16.1998 0 Td
0 Tr
0 g
1 w
(export) Tx 
(\r) TX 
TO
U
u
0 To
1 0 0 1 241.9512 -100.064 0 Tp
0 Tv
TP
-2.7 0 Td
0 Tr
(/) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
260.4121 -104.9697 m
223.2754 -104.9697 L
223.2754 -91.021 L
260.4121 -91.021 L
260.4121 -104.9697 L
s
U
u
0 To
1 0 0 1 288.0762 -132.0132 0 Tp
0 Tv
TP
-8.0999 0 Td
0 Tr
0 O
0 g
1 w
(etc) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
306.5371 -136.9189 m
269.4004 -136.9189 L
269.4004 -122.9702 L
306.5371 -122.9702 L
306.5371 -136.9189 L
s
U
u
0 To
1 0 0 1 334.2012 -132.0132 0 Tp
0 Tv
TP
-8.0999 0 Td
0 Tr
0 O
0 g
1 w
(var) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
352.6621 -136.9189 m
315.5254 -136.9189 L
315.5254 -122.9702 L
352.6621 -122.9702 L
352.6621 -136.9189 L
s
U
u
0 O
1 g
260.4121 -200.7915 m
223.2754 -200.7915 L
223.2754 -186.8428 L
260.4121 -186.8428 L
260.4121 -200.7915 L
b
0 To
1 0 0 1 241.9512 -195.8857 0 Tp
0 Tv
TP
-13.4998 0 Td
0 Tr
0 g
1 w
(zoneb) Tx 
(\r) TX 
TO
U
u
1 g
0 R
0 G
0.5 w
260.4121 -159.8579 m
223.2754 -159.8579 L
223.2754 -145.9092 L
260.4121 -145.9092 L
260.4121 -159.8579 L
b
0 To
1 0 0 1 241.9512 -154.9521 0 Tp
0 Tv
TP
-13.4998 0 Td
0 Tr
0 g
1 w
(zones) Tx 
(\r) TX 
TO
U
u
0 R
0 G
0.5 w
324.6611 -291.7168 m
324.6611 -282.6777 L
159.2427 -282.6777 L
159.2427 -291.7012 L
S
0 Ap
214.375 -282.6465 m
214.375 -291.7012 l
S
269.5107 -282.6465 m
269.5107 -291.7012 l
S
u
0 To
1 0 0 1 159.2402 -300.7129 0 Tp
0 Tv
TP
-10.7998 0 Td
0 Tr
0 O
0 g
1 w
(sbin) Tx 
(\r) TX 
TO
1 Ap
0 R
0 G
0.5 w
177.7002 -305.6191 m
140.564 -305.6191 L
140.564 -291.6699 L
177.7002 -291.6699 L
177.7002 -305.6191 L
s
U
u
0 To
1 0 0 1 214.3809 -300.7129 0 Tp
0 Tv
TP
-8.0999 0 Td
0 Tr
0 O
0 g
1 w
(usr) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
232.8413 -305.6191 m
195.7046 -305.6191 L
195.7046 -291.6699 L
232.8413 -291.6699 L
232.8413 -305.6191 L
s
U
u
0 To
1 0 0 1 269.5283 -300.7129 0 Tp
0 Tv
TP
-8.0999 0 Td
0 Tr
0 O
0 g
1 w
(etc) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
287.9893 -305.6191 m
250.8525 -305.6191 L
250.8525 -291.6699 L
287.9893 -291.6699 L
287.9893 -305.6191 L
s
U
u
0 To
1 0 0 1 324.6689 -300.7129 0 Tp
0 Tv
TP
-8.0999 0 Td
0 Tr
0 O
0 g
1 w
(var) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
343.1299 -305.6191 m
305.9932 -305.6191 L
305.9932 -291.6699 L
343.1299 -291.6699 L
343.1299 -305.6191 L
s
U
U
u
430.5449 -250.7871 m
430.5449 -241.748 L
265.127 -241.748 L
265.127 -250.7715 L
S
0 Ap
320.2588 -241.7168 m
320.2588 -250.7715 l
S
375.3945 -241.7168 m
375.3945 -250.7715 l
S
u
0 To
1 0 0 1 265.124 -259.7842 0 Tp
0 Tv
TP
-10.7998 0 Td
0 Tr
0 O
0 g
1 w
(sbin) Tx 
(\r) TX 
TO
1 Ap
0 R
0 G
0.5 w
283.584 -264.6895 m
246.4473 -264.6895 L
246.4473 -250.7412 L
283.584 -250.7412 L
283.584 -264.6895 L
s
U
u
0 To
1 0 0 1 320.2646 -259.7842 0 Tp
0 Tv
TP
-8.0999 0 Td
0 Tr
0 O
0 g
1 w
(usr) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
338.7246 -264.6895 m
301.5879 -264.6895 L
301.5879 -250.7412 L
338.7246 -250.7412 L
338.7246 -264.6895 L
s
U
u
0 To
1 0 0 1 375.4121 -259.7842 0 Tp
0 Tv
TP
-8.0999 0 Td
0 Tr
0 O
0 g
1 w
(etc) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
393.873 -264.6895 m
356.7363 -264.6895 L
356.7363 -250.7412 L
393.873 -250.7412 L
393.873 -264.6895 L
s
U
u
0 To
1 0 0 1 430.5527 -259.7842 0 Tp
0 Tv
TP
-8.0999 0 Td
0 Tr
0 O
0 g
1 w
(var) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
449.0137 -264.6895 m
411.877 -264.6895 L
411.877 -250.7412 L
449.0137 -250.7412 L
449.0137 -264.6895 L
s
U
U
0 Ap
1 w [6 3 ]0 d
283.5391 -257.7246 m
292.5879 -257.7246 l
292.3223 -323.6133 l
48.4873 -323.6133 l
48.4873 -132.2559 l
38.1406 -132.2559 l
S
38.1235 -127.5884 m
58.9028 -127.5884 l
58.9028 -314.6152 l
159.1431 -314.6152 l
159.1431 -305.5938 l
S
2 w
90.0391 -132.25 m
79.7056 -132.25 l
79.7056 -332.6211 l
214.3706 -332.6211 l
214.3706 -305.5781 l
S
90.0547 -127.5781 m
69.3091 -127.5781 l
69.3091 -341.6182 l
347.8516 -341.6182 l
347.8516 -257.7246 l
338.6953 -257.7246 l
S
99.3516 -250.7656 m
99.3516 -136.8906 l
S
1 w
10.3438 -250.7656 m
10.3438 -136.8906 l
S
u
1 Ap
0 O
1 g
0.5 w []0 d
154.7402 -223.7422 m
117.6035 -223.7422 L
117.6035 -209.7939 L
154.7402 -209.7939 L
154.7402 -223.7422 L
b
0 To
1 0 0 1 136.2793 -218.8369 0 Tp
0 Tv
TP
-2.7 0 Td
0 Tr
0 g
1 w
(/) Tx 
(\r) TX 
TO
U
u
1 g
0 R
0 G
0.5 w
260.4121 -223.7422 m
223.2754 -223.7422 L
223.2754 -209.7939 L
260.4121 -209.7939 L
260.4121 -223.7422 L
b
0 To
1 0 0 1 241.9512 -218.8369 0 Tp
0 Tv
TP
-2.7 0 Td
0 Tr
0 g
1 w
(/) Tx 
(\r) TX 
TO
U
u
1 g
0 R
0 G
0.5 w
366.3184 -223.7422 m
329.1816 -223.7422 L
329.1816 -209.7939 L
366.3184 -209.7939 L
366.3184 -223.7422 L
b
0 To
1 0 0 1 347.8574 -218.8369 0 Tp
0 Tv
TP
-2.7 0 Td
0 Tr
0 g
1 w
(/) Tx 
(\r) TX 
TO
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
